
kernelversion.c,38
char *uts_release uts_release16,454

hal/public/wackelf.c,275
#define	_LITTLE_ENDIAN	55,2265
#define	_BIG_ENDIAN	56,2304
#define	htobe16(58,2373
#define	htobe32(59,2408
#define	htole16(60,2443
#define	htole32(61,2478
#define	htobe16(63,2555
#define	htobe32(64,2590
#define	htole16(65,2625
#define	htole32(66,2660
main(73,2780

tools/athdebug.c,2804
#undef ARRAY_SIZE55,2230
#define ARRAY_SIZE(56,2248
static const char *progname;progname58,2306
	ATH_DEBUG_XMIT	61,2343
	ATH_DEBUG_XMIT		= 0x00000001,x0000000161,2343
	ATH_DEBUG_XMIT_DESC	62,2401
	ATH_DEBUG_XMIT_DESC	= 0x00000002,x0000000262,2401
	ATH_DEBUG_RECV	63,2459
	ATH_DEBUG_RECV		= 0x00000004,x0000000463,2459
	ATH_DEBUG_RECV_DESC	64,2517
	ATH_DEBUG_RECV_DESC	= 0x00000008,x0000000864,2517
	ATH_DEBUG_RATE	65,2575
	ATH_DEBUG_RATE		= 0x00000010,x0000001065,2575
	ATH_DEBUG_RESET	66,2625
	ATH_DEBUG_RESET		= 0x00000020,x0000002066,2625
	ATH_DEBUG_SKB_REF	67,2680
	ATH_DEBUG_SKB_REF	= 0x00000040,x0000004067,2680
	ATH_DEBUG_BEACON	68,2738
	ATH_DEBUG_BEACON	= 0x00000080,x0000008068,2738
	ATH_DEBUG_WATCHDOG	69,2792
	ATH_DEBUG_WATCHDOG	= 0x00000100,x0000010069,2792
	ATH_DEBUG_INTR	70,2849
	ATH_DEBUG_INTR		= 0x00001000,x0000100070,2849
	ATH_DEBUG_TX_PROC	71,2890
	ATH_DEBUG_TX_PROC	= 0x00002000,x0000200071,2890
	ATH_DEBUG_RX_PROC	72,2941
	ATH_DEBUG_RX_PROC	= 0x00004000,x0000400072,2941
	ATH_DEBUG_BEACON_PROC	73,2992
	ATH_DEBUG_BEACON_PROC	= 0x00008000,x0000800073,2992
	ATH_DEBUG_CALIBRATE	74,3051
	ATH_DEBUG_CALIBRATE	= 0x00010000,x0001000074,3051
	ATH_DEBUG_KEYCACHE	75,3113
	ATH_DEBUG_KEYCACHE	= 0x00020000,x0002000075,3113
	ATH_DEBUG_STATE	76,3174
	ATH_DEBUG_STATE		= 0x00040000,x0004000076,3174
	ATH_DEBUG_TSF	77,3237
	ATH_DEBUG_TSF		= 0x00080000,x0008000077,3237
	ATH_DEBUG_LED	78,3294
	ATH_DEBUG_LED		= 0x00100000,x0010000078,3294
	ATH_DEBUG_FF	79,3345
	ATH_DEBUG_FF		= 0x00200000,x0020000079,3345
	ATH_DEBUG_TURBO	80,3392
	ATH_DEBUG_TURBO		= 0x00400000,x0040000080,3392
	ATH_DEBUG_UAPSD	81,3450
	ATH_DEBUG_UAPSD		= 0x00800000,x0080000081,3450
	ATH_DEBUG_DOTH	82,3494
	ATH_DEBUG_DOTH		= 0x01000000,x0100000082,3494
	ATH_DEBUG_DOTHFILT	83,3536
	ATH_DEBUG_DOTHFILT	= 0x02000000,x0200000083,3536
	ATH_DEBUG_DOTHFILTVBSE	84,3602
	ATH_DEBUG_DOTHFILTVBSE	= 0x04000000,x0400000084,3602
	ATH_DEBUG_DOTHFILTNOSC 85,3682
	ATH_DEBUG_DOTHFILTNOSC  = 0x08000000,x0800000085,3682
	ATH_DEBUG_DOTHPULSES 86,3798
	ATH_DEBUG_DOTHPULSES    = 0x10000000,x1000000086,3798
	ATH_DEBUG_TXBUF 87,3869
	ATH_DEBUG_TXBUF         = 0x20000000,x2000000087,3869
	ATH_DEBUG_SKB 88,3947
	ATH_DEBUG_SKB           = 0x40000000,x4000000088,3947
	ATH_DEBUG_FATAL	89,4041
	ATH_DEBUG_FATAL		= 0x80000000,x8000000089,4041
	ATH_DEBUG_ANY	90,4092
	ATH_DEBUG_ANY		= 0xffffffff,xffffffff90,4092
	ATH_DEBUG_GLOBAL	91,4122
	ATH_DEBUG_GLOBAL	= (ATH_DEBUG_SKB|ATH_DEBUG_SKB91,4122
	ATH_DEBUG_GLOBAL	= (ATH_DEBUG_SKB|ATH_DEBUG_SKB_REF)ATH_DEBUG_SKB_REF91,4122
	const char *name;name95,4196
	u_int bit;96,4215
	const char *desc;desc97,4227
} flags[flags98,4246
getflag(131,6172
usage(142,6359
sysctlbyname(155,6656
main(197,7499

tools/athchans.c,195
static	int s 62,2403
static const char *progname;progname63,2422
checksocket(66,2464
#define IOCTL_ERR(72,2576
set80211priv(74,2648
usage(136,4416
#define	MAXCHAN	142,4511
main(144,4584

tools/athkey.c,274
static int s 62,2410
static const char *progname;progname63,2429
checksocket(66,2471
#define IOCTL_ERR(72,2583
set80211priv(74,2655
digittoint(136,4422
getdata(142,4529
getcipher(185,5397
#define	streq(187,5427
#undef streq205,5995
usage(209,6023
main(217,6143

tools/80211stats.c,290
#define	SIOCG80211STATS	64,2449
#define INT64FMT 69,2579
#define INT64FMT 71,2608
printstats(75,2652
#define	STAT(77,2712
#undef STAT159,6897
static struct ifreq ifr;162,6912
static int s;163,6937
print_sta_stats(166,6964
#define	STAT(168,7036
#undef STAT240,8919
main(244,8938

tools/athstats.c,396
#define OPT_AH_H 60,2472
#undef ARRAY_SIZE66,2574
#define ARRAY_SIZE(67,2592
	u_int		phyerr;70,2672
	const char*	desc;71,2688
} phyerrdescriptions[phyerrdescriptions72,2707
printstats(95,3652
#define	STAT(97,3706
#define	STATI(99,3793
#undef STAT175,6951
#undef STATI176,6963
getifrate(180,6992
getifstats(193,7241
static int signalled;222,7821
catchalarm(225,7856
main(231,7903

tools/80211debug.c,2605
#undef ARRAY_SIZE52,2167
#define ARRAY_SIZE(53,2185
static const char *progname;progname55,2243
	IEEE80211_MSG_NODE_REF	58,2280
	IEEE80211_MSG_NODE_REF	= 0x80000000,x8000000058,2280
	IEEE80211_MSG_DEBUG	59,2350
	IEEE80211_MSG_DEBUG	= 0x40000000,x4000000059,2350
	IEEE80211_MSG_DUMPPKTS	60,2412
	IEEE80211_MSG_DUMPPKTS	= 0x20000000,x2000000060,2412
	IEEE80211_MSG_CRYPTO	61,2491
	IEEE80211_MSG_CRYPTO	= 0x10000000,x1000000061,2491
	IEEE80211_MSG_INPUT	62,2548
	IEEE80211_MSG_INPUT	= 0x08000000,x0800000062,2548
	IEEE80211_MSG_XRATE	63,2604
	IEEE80211_MSG_XRATE	= 0x04000000,x0400000063,2604
	IEEE80211_MSG_ELEMID	64,2663
	IEEE80211_MSG_ELEMID	= 0x02000000,x0200000064,2663
	IEEE80211_MSG_NODE	65,2724
	IEEE80211_MSG_NODE	= 0x01000000,x0100000065,2724
	IEEE80211_MSG_ASSOC	66,2778
	IEEE80211_MSG_ASSOC	= 0x00800000,x0080000066,2778
	IEEE80211_MSG_AUTH	67,2840
	IEEE80211_MSG_AUTH	= 0x00400000,x0040000067,2840
	IEEE80211_MSG_SCAN	68,2904
	IEEE80211_MSG_SCAN	= 0x00200000,x0020000068,2904
	IEEE80211_MSG_OUTPUT	69,2953
	IEEE80211_MSG_OUTPUT	= 0x00100000,x0010000069,2953
	IEEE80211_MSG_STATE	70,3011
	IEEE80211_MSG_STATE	= 0x00080000,x0008000070,3011
	IEEE80211_MSG_POWER	71,3066
	IEEE80211_MSG_POWER	= 0x00040000,x0004000071,3066
	IEEE80211_MSG_DOT1X	72,3127
	IEEE80211_MSG_DOT1X	= 0x00020000,x0002000072,3127
	IEEE80211_MSG_DOT1XSM	73,3189
	IEEE80211_MSG_DOT1XSM	= 0x00010000,x0001000073,3189
	IEEE80211_MSG_RADIUS	74,3253
	IEEE80211_MSG_RADIUS	= 0x00008000,x0000800074,3253
	IEEE80211_MSG_RADDUMP	75,3316
	IEEE80211_MSG_RADDUMP	= 0x00004000,x0000400075,3316
	IEEE80211_MSG_RADKEYS	76,3386
	IEEE80211_MSG_RADKEYS	= 0x00002000,x0000200076,3386
	IEEE80211_MSG_WPA	77,3446
	IEEE80211_MSG_WPA	= 0x00001000,x0000100077,3446
	IEEE80211_MSG_ACL	78,3502
	IEEE80211_MSG_ACL	= 0x00000800,x0000080078,3502
	IEEE80211_MSG_WME	79,3554
	IEEE80211_MSG_WME	= 0x00000400,x0000040079,3554
	IEEE80211_MSG_SUPG	80,3606
	IEEE80211_MSG_SUPG	= 0x00000200,x0000020080,3606
	IEEE80211_MSG_DOTH	81,3653
	IEEE80211_MSG_DOTH	= 0x00000100,x0000010081,3653
	IEEE80211_MSG_INACT	82,3698
	IEEE80211_MSG_INACT	= 0x00000080,x0000008082,3698
	IEEE80211_MSG_ROAM	83,3759
	IEEE80211_MSG_ROAM	= 0x00000040,x0000004083,3759
	IEEE80211_MSG_ANY	84,3816
	IEEE80211_MSG_ANY	= 0xffffffff,xffffffff84,3816
	IEEE80211_MSG_IC	85,3849
	IEEE80211_MSG_IC	= (IEEE80211_MSG_NODE_REF)85,3849
	const char	*name;name89,3914
	u_int		bit;90,3933
	const char *desc;desc91,3946
} flags[flags92,3965
getflag(122,5516
usage(133,5703
sysctlbyname(146,6003
main(188,6846

tools/wlanconfig.c,1231
#define IEEE80211_NODE_TURBOP	68,2553
#define IEEE80211_NODE_COMP	69,2616
#define IEEE80211_NODE_FF	70,2678
#define IEEE80211_NODE_XR	71,2745
#define IEEE80211_NODE_AR	72,2804
#define IEEE80211_NODE_BOOST	73,2855
#define	streq(75,2892
#undef ARRAY_SIZE77,2952
#define ARRAY_SIZE(78,2970
static int verbose 100,3764
main(103,3793
static int if_split_name(217,6657
vap_create(254,7407
vap_destroy(268,7618
usage(284,7924
getopmode(294,8296
getflag(315,8820
ieee80211_mhz2ieee(334,9213
rssi2dbm(349,9452
getmaxrate(355,9508
getcaps(368,9743
getathcaps(400,10513
getstamode(422,10949
printie(431,11069
copy_essid(457,11670
#define LE_READ_4(496,12523
iswpaoui(504,12760
iswmeoui(510,12893
isatherosoui(516,13026
printies(522,13155
ieee80211_ntoa(549,13776
list_stations(560,14017
#define LE_READ_4(645,16442
list_scan(653,16671
print_chaninfo(698,17754
list_channels(729,18664
list_keys(766,19715
#define	IEEE80211_C_BITS 776,19913
printb(785,20201
list_capabilities(812,20641
list_wme(824,20906
#define	GETPARAM(826,20937
ieee80211_status(882,22220
getsocket(893,22434
get80211param(906,22599
#define IOCTL_ERR(927,23055
do80211priv(929,23127
get80211priv(985,24808
strlcat(1004,25359

tools/athctrl.c,61
setsysctrl(57,2285
static void usage(73,2629
main(91,3062

tools/ath_info.c,5911
#undef ARRAY_SIZE102,3066
#define ARRAY_SIZE(103,3084
#define dbg(105,3142
#define err(111,3271
#define AR5K_PCI_MEM_SIZE 114,3368
#define AR5K_NUM_GPIO	116,3403
#define AR5K_GPIOCR	118,3428
#define AR5K_GPIOCR_OUT(119,3479
#define AR5K_GPIOCR_INT_SEL(120,3546
#define AR5K_GPIODO	125,3688
#define AR5K_GPIODI	130,3782
enum ath5k_srev_type 135,3859
	AR5K_VERSION_VER,136,3882
	AR5K_VERSION_REV,137,3901
	AR5K_VERSION_RAD,138,3920
struct ath5k_srev_name 141,3943
	const char *sr_name;sr_name142,3968
	enum ath5k_srev_type sr_type;143,3990
	u_int sr_val;144,4021
#define AR5K_SREV_UNKNOWN	147,4040
#define AR5K_SREV_VER_AR5210	150,4107
#define AR5K_SREV_VER_AR5311	151,4141
#define AR5K_SREV_VER_AR5311A	152,4175
#define AR5K_SREV_VER_AR5311B	153,4210
#define AR5K_SREV_VER_AR5211	154,4245
#define AR5K_SREV_VER_AR5212	155,4279
#define AR5K_SREV_VER_AR5213	156,4313
#define AR5K_SREV_VER_AR5213A	157,4347
#define	AR5K_SREV_VER_AR2424	158,4382
#define	AR5K_SREV_VER_AR5424	159,4416
#define	AR5K_SREV_VER_AR5413	160,4450
#define AR5K_SREV_VER_AR5414	161,4484
#define	AR5K_SREV_VER_AR5416	162,4518
#define	AR5K_SREV_VER_AR5418	163,4552
#define	AR5K_SREV_VER_AR2425	164,4586
#define AR5K_SREV_RAD_5110	167,4654
#define AR5K_SREV_RAD_5111	168,4686
#define AR5K_SREV_RAD_5111A	169,4718
#define AR5K_SREV_RAD_2111	170,4751
#define AR5K_SREV_RAD_5112	171,4783
#define AR5K_SREV_RAD_5112A	172,4815
#define AR5K_SREV_RAD_2112	173,4848
#define AR5K_SREV_RAD_2112A	174,4880
#define AR5K_SREV_RAD_SC1	175,4913
#define	AR5K_SREV_RAD_SC2	176,4969
#define	AR5K_SREV_RAD_5133	177,5025
static const struct ath5k_srev_name ath5k_srev_names[ath5k_srev_names179,5083
#define AR5K_SREV	212,6545
#define AR5K_SREV_REV	213,6594
#define AR5K_SREV_REV_S	214,6652
#define AR5K_SREV_VER	215,6679
#define AR5K_SREV_VER_S	216,6736
#define	AR5K_PHY_CHIP_ID	221,6801
#define	AR5K_PHY_BASE	226,6858
#define	AR5K_PHY(227,6889
#define AR5K_PHY_SHIFT_2GHZ	228,6942
#define AR5K_PHY_SHIFT_5GHZ	229,6982
#define AR5K_RESET_CTL	231,7023
#define AR5K_RESET_CTL_PCU	232,7077
#define AR5K_RESET_CTL_DMA	233,7149
#define	AR5K_RESET_CTL_BASEBAND	234,7222
#define AR5K_RESET_CTL_MAC	235,7298
#define AR5K_RESET_CTL_PHY	236,7379
#define AR5K_RESET_CTL_PCI	237,7444
#define AR5K_RESET_CTL_CHIP	238,7520
#define AR5K_SLEEP_CTL	244,7672
#define AR5K_SLEEP_CTL_SLDUR	245,7727
#define AR5K_SLEEP_CTL_SLDUR_S	246,7794
#define AR5K_SLEEP_CTL_SLE	247,7828
#define AR5K_SLEEP_CTL_SLE_S	248,7891
#define AR5K_SLEEP_CTL_SLE_WAKE	249,7924
#define AR5K_SLEEP_CTL_SLE_SLP	250,7991
#define AR5K_SLEEP_CTL_SLE_ALLOW	251,8057
#define AR5K_SLEEP_CTL_SLE_UNITS	252,8101
#define AR5K_PCICFG	254,8164
#define AR5K_PCICFG_EEAE	255,8216
#define AR5K_PCICFG_CLKRUNEN	256,8287
#define AR5K_PCICFG_EESIZE	257,8356
#define AR5K_PCICFG_EESIZE_S	258,8430
#define AR5K_PCICFG_EESIZE_4K	259,8462
#define AR5K_PCICFG_EESIZE_8K	260,8504
#define AR5K_PCICFG_EESIZE_16K	261,8546
#define AR5K_PCICFG_EESIZE_FAIL	262,8590
#define AR5K_PCICFG_SPWR_DN	264,8663
#define AR5K_EEPROM_BASE	266,8739
#define AR5K_EEPROM_MAGIC	268,8773
#define AR5K_EEPROM_MAGIC_VALUE	269,8844
#define AR5K_EEPROM_MAGIC_5212	270,8916
#define AR5K_EEPROM_MAGIC_5211	271,8970
#define AR5K_EEPROM_MAGIC_5210	272,9024
#define AR5K_EEPROM_DATA_5211	277,9110
#define AR5K_EEPROM_DATA_5210	278,9147
#define	AR5K_EEPROM_DATA	279,9184
#define AR5K_EEPROM_CMD	285,9336
#define AR5K_EEPROM_CMD_READ	286,9390
#define AR5K_EEPROM_CMD_WRITE	287,9448
#define AR5K_EEPROM_CMD_RESET	288,9508
#define AR5K_EEPROM_STAT_5210	293,9602
#define AR5K_EEPROM_STAT_5211	294,9669
#define	AR5K_EEPROM_STATUS	295,9737
#define AR5K_EEPROM_STAT_RDERR	297,9856
#define AR5K_EEPROM_STAT_RDDONE	298,9923
#define AR5K_EEPROM_STAT_WRERR	299,9995
#define AR5K_EEPROM_STAT_WRDONE	300,10063
#define AR5K_EEPROM_REG_DOMAIN	302,10137
#define AR5K_EEPROM_INFO_BASE	303,10218
#define AR5K_EEPROM_INFO_MAX	304,10287
#define AR5K_EEPROM_INFO_CKSUM	305,10349
#define AR5K_EEPROM_INFO(306,10388
#define AR5K_EEPROM_MODE_11A	307,10449
#define AR5K_EEPROM_MODE_11B	308,10481
#define AR5K_EEPROM_MODE_11G	309,10513
#define AR5K_EEPROM_VERSION	311,10546
#define AR5K_EEPROM_HDR	313,10596
#define AR5K_EEPROM_HDR_11A(314,10685
#define AR5K_EEPROM_HDR_11B(315,10784
#define AR5K_EEPROM_HDR_11G(316,10883
#define AR5K_EEPROM_HDR_T_2GHZ_DIS(317,10982
#define AR5K_EEPROM_HDR_T_5GHZ_DBM(318,11074
#define AR5K_EEPROM_HDR_DEVICE(319,11184
#define AR5K_EEPROM_HDR_T_5GHZ_DIS(320,11240
#define AR5K_EEPROM_HDR_RFKILL(321,11333
#define AR5K_EEPROM_MISC0	324,11467
#define AR5K_EEPROM_EARSTART(325,11501
#define AR5K_EEPROM_EEMAP(326,11549
#define AR5K_EEPROM_MISC1	327,11601
#define AR5K_EEPROM_TARGET_PWRSTART(328,11635
#define AR5K_EEPROM_HAS32KHZCRYSTAL(329,11690
#define AR5K_REG_MS(334,11783
#define AR5K_REG_READ(341,11924
#define AR5K_REG_WRITE(343,12008
#define AR5K_REG_READ(346,12113
#define AR5K_REG_WRITE(348,12187
#define AR5K_REG_ENABLE_BITS(353,12285
#define AR5K_REG_DISABLE_BITS(356,12385
#define AR5K_TUNE_REGISTER_TIMEOUT	359,12487
struct eeprom_entry 362,12560
	const char *name;name363,12582
	int addr;364,12601
static const struct eeprom_entry eeprom_addr[eeprom_addr367,12616
static const int eeprom_addr_len 377,12850
static int force_write 379,12932
static int verbose 380,12960
static u_int32_t ath5k_hw_bitswap(385,13040
ath5k_hw_radio_revision(401,13299
ath5k_hw_eeprom_write(450,14301
ath5k_hw_eeprom_read(502,15385
static const char *ath5k_hw_get_part_name(ath5k_hw_get_part_name533,16163
static int eeprom_name2addr(553,16625
static const char *eeprom_addr2name(eeprom_addr2name565,16916
do_write_pairs(575,17138
#define MAX_NR_WRITES 578,17232
		int addr;580,17267
		unsigned int val;581,17279
static void usage(706,20205
int main(741,21491
		int valid;755,21875
		int value;756,21888

R488if_ath.c,17825
#define	AR_DEBUG45,2109
#define LE_READ_2(106,3411
#define LE_READ_4(109,3527
#define DEF_RATE_CTL 116,3783
#define DEF_RATE_CTL 118,3838
	ATH_LED_TX,122,3883
	ATH_LED_RX,123,3896
	ATH_LED_POLL,124,3909
#define ath_return_txbuf(286,11749
#define ath_return_txbuf_locked(295,12145
#define ath_return_txbuf_list(304,12569
#define ath_return_txbuf_list_locked(313,12983
#define cleanup_ath_buf(322,13425
#define ath_cac_running_dbgmsg(350,14614
#define ath_chan_unavail_dbgmsg(352,14694
static int ath_calinterval 379,15842
static int ath_countrycode 380,15894
static int ath_outdoor 381,15956
static int ath_xchanmode 382,16017
static int ath_maxvaps 383,16085
static char *autocreate autocreate384,16164
static char *ratectl ratectl385,16196
static int rfkill 386,16233
static int tpc 387,16256
static int countrycode 388,16276
static int maxvaps 389,16305
static int outdoor 390,16330
static int xchanmode 391,16355
static int beacon_cal 392,16382
static const char *hal_status_desc[hal_status_desc394,16410
static struct notifier_block ath_event_block 413,16949
static int	ath_debug 458,18431
static int	ieee80211_debug 470,18816
#define ATH_SETUP_XR_VAP(480,19111
#define ATH_SET_VAP_BSSID_MASK(501,19908
#define ATH_GET_VAP_ID(503,20011
#define ATH_SET_VAP_BSSID(504,20077
ath_attach(513,20252
ath_detach(1150,39174
ath_vap_create(1209,40708
ath_vap_delete(1463,48428
ath_suspend(1564,51318
ath_resume(1573,51471
ath_chan_unavail(1584,51728
_ath_cac_running_dbgmsg(1591,51920
_ath_chan_unavail_dbgmsg(1601,52175
ath_extend_tsf(1618,52721
#define TSTAMP_RX_MASK 1620,52771
ath_uapsd_processtriggers(1637,53093
#define	PA2DESC(1657,53613
#undef PA2DESC2128,68152
ath_intr(2136,68304
ath_fatal_tasklet(2333,75385
ath_rxorn_tasklet(2343,75589
ath_bmiss_tasklet(2353,75799
ath_chan2flags(2369,76286
ath_init(2396,76924
ath_stop_locked(2522,80381
static void ath_set_beacon_cal(2583,81990
ath_stop(2604,82519
ar_device(2636,83289
ath_set_ack_bitrate(2681,84168
#define AR5K_AR5212_STA_ID1 2686,84384
#define AR5K_AR5212_STA_ID1_ACKCTS_6MB 2687,84439
#define AR5K_AR5212_STA_ID1_BASE_RATE_11B 2688,84498
#undef AR5K_AR5212_STA_ID12697,84849
#undef AR5K_AR5212_STA_ID1_BASE_RATE_11B2698,84876
#undef AR5K_AR5212_STA_ID1_ACKCTS_6MB2699,84917
ath_reset(2713,85309
ath_desc_swap(2782,87314
ath_tx_txqaddbuf(2799,87695
dot11_to_ratecode(2864,89713
ath_tx_startraw(2875,89986
ath_ff_neverflushtestdone(2982,93111
ath_ff_ageflushtestdone(2988,93205
ath_ffstageq_flush(3001,93471
ath_get_buffers_available(3045,94659
ath_get_buffer_count(3054,94907
_take_txbuf_locked_debug(3063,95102
_take_txbuf_debug(3117,96797
#define ath_take_txbuf_locked(3135,97276
#define ath_take_txbuf_locked_debug(3137,97367
#define ath_take_txbuf_mgmt_locked(3140,97473
#define ath_take_txbuf_mgmt_locked_debug(3142,97569
#define ath_take_txbuf(3145,97680
#define ath_take_txbuf_debug(3147,97757
#define ath_take_txbuf_mgmt(3150,97849
#define ath_take_txbuf_mgmt_debug(3152,97931
#define ath_take_txbuf_locked(3157,98071
#define ath_take_txbuf_locked_debug(3159,98136
#define ath_take_txbuf_mgmt_locked(3162,98222
#define ath_take_txbuf_mgmt_locked_debug(3164,98292
#define ath_take_txbuf(3167,98383
#define ath_take_txbuf_debug(3169,98434
#define ath_take_txbuf_mgmt(3172,98506
#define ath_take_txbuf_mgmt_debug(3174,98562
ath_hardstart(3188,98893
ath_mgtstart(3519,107766
ath_keyprint(3566,108851
ath_keyset_tkip(3627,110224
#define	IEEE80211_KEY_XR	3630,110352
#undef IEEE80211_KEY_XR3679,112066
ath_keyset(3688,112276
key_alloc_2pair(3749,114222
key_alloc_pair(3800,115517
key_alloc_single(3844,116453
ath_key_alloc(3878,117437
ath_key_delete(3942,119466
ath_key_set(4018,121627
ath_key_update_begin(4034,122110
ath_key_update_end(4055,122646
ath_calcrxfilter(4085,123683
#define	RX_FILTER_PRESERVE	4087,123724
#undef RX_FILTER_PRESERVE4110,124668
ath_merge_mcast(4121,124954
ath_mode_init(4146,125625
ath_setslottime(4178,126396
ath_updateslot(4197,126887
ath_beacon_dturbo_config(4223,127508
#define	IS_CAPABLE(4225,127579
#undef IS_CAPABLE4266,129007
ath_beacon_dturbo_update(4274,129166
ath_check_beacon_done(4378,132692
ath_turbo_switch_mode(4415,133476
ath_beaconq_setup(4463,134834
ath_beaconq_config(4491,135454
#define	ATH_EXPONENT_TO_VALUE(4493,135497
#undef ATH_EXPONENT_TO_VALUE4530,136618
ath_beacon_alloc(4534,136661
ath_beacon_alloc_internal(4550,137006
ath_beacon_setup(4629,139545
#define	USE_SHPREAMBLE(4631,139606
#undef USE_SHPREAMBLE4726,142393
ath_beacon_generate(4733,142504
ath_beacon_send(4897,147209
ath_bstuck_tasklet(5073,152977
ath_beacon_return(5095,153536
ath_beacon_free(5105,153745
ath_beacon_config(5134,154886
#define	FUDGE	5178,156260
#undef FUDGE5240,158357
ath_descdma_setup(5382,162573
#define	DS2PHYS(5386,162699
#undef DS2PHYS5434,163943
ath_descdma_cleanup(5438,163973
ath_desc_alloc(5454,164390
ath_desc_free(5485,165136
ath_node_alloc_debug(5500,165579
ath_node_cleanup_debug(5535,166625
ath_node_free_debug(5593,168311
ath_node_getrssi(5612,168679
#define	HAL_EP_RND(5614,168731
#undef HAL_EP_RND5630,169282
ath_node_move_data(5641,169462
#define ath_alloc_skb(6005,178113
ath_alloc_skb_debug(6007,178208
ath_rxbuf_init(6029,178676
ath_skb_removepad(6133,181886
ath_capture(6163,182715
ath_recv_mgmt(6194,183621
ath_setdefantenna(6318,187392
ath_rx_tasklet(6331,187687
#define	PA2DESC(6333,187721
#undef PA2DESC6624,196388
ath_grppoll_period_update(6630,196440
ath_grppoll_txq_update(6692,197855
ath_grppoll_txq_setup(6717,198476
static void ath_grppoll_start(6767,199767
	struct rate_to_str_map 6788,200429
		u_int8_t str[str6789,200455
		int ratekbps;6790,200474
#define MAX_GRPPOLL_RATE 6804,200714
#define	USE_SHPREAMBLE(6805,200741
#undef USE_SHPREAMBLE6989,206474
static void ath_grppoll_stop(6992,206499
ath_txq_setup(7037,207485
ath_tx_setup(7151,210888
ath_txq_update(7173,211349
#define	ATH_EXPONENT_TO_VALUE(7175,211417
#define	ATH_TXOP_TO_US(7176,211461
#undef ATH_TXOP_TO_US7197,212190
#undef ATH_EXPONENT_TO_VALUE7198,212212
ath_wme_update(7205,212322
ath_uapsd_flush(7222,212823
ath_tx_cleanupq(7260,213930
ath_tx_cleanup(7280,214386
ath_get_icvlen(7292,214624
ath_get_ivlen(7304,214894
ath_tx_findindex(7323,215261
ath_tx_uapsdqueue(7341,215517
ath_tx_start(7411,217737
#define	MIN(7414,217864
#undef MIN8030,236693
ath_tx_processq(8038,236836
#define TSTAMP_TX_MASK 8206,241722
txqactive(8258,243048
ath_tx_tasklet_q0(8270,243328
ath_tx_tasklet_q0123(8291,243832
ath_tx_tasklet(8326,244750
ath_tx_timeout(8345,245204
ath_tx_draintxq(8366,245661
ath_tx_stopdma(8395,246339
ath_draintxq(8409,246688
ath_stoprecv(8437,247476
#define	PA2DESC(8439,247513
#undef PA2DESC8465,248500
ath_startrecv(8472,248581
ath_flushrecv(8514,249724
ath_chan_change(8525,249945
ath_chan_set(8559,250892
ath_mib_enable(8724,256359
ath_calibrate(8737,256627
ath_scan_start(8813,258825
ath_scan_end(8833,259311
ath_set_channel(8851,259775
ath_set_coverageclass(8868,260285
ath_mhz2ieee(8878,260466
ath_newstate(8890,260688
ath_dfs_cac_completed(9210,270588
ath_comp_set(9322,273993
ath_setup_comp(9330,274167
#define	IEEE80211_KEY_XR	9332,274223
#undef IEEE80211_KEY_XR9372,275397
ath_setup_stationkey(9385,275749
ath_setup_stationwepkey(9422,276846
ath_setup_keycacheslot(9514,279736
ath_newassoc(9545,280667
ath_getchannels(9577,281558
ath_led_done(9728,286440
ath_led_off(9740,286679
ath_led_blink(9754,287025
ath_led_event(9766,287365
set_node_txpower(9789,287916
ath_set_clamped_maxtxpower(9800,288315
ath_get_clamped_maxtxpower(9812,288762
ath_get_real_maxtxpower(9827,289358
ath_update_txpow(9843,289801
ath_xr_rate_setup(9878,291113
ath_setup_subrates(9907,291904
ath_rate_setup(9950,293179
ath_setcurmode(9997,294477
		u_int		rate;10001,294636
		u_int16_t	timeOn;10002,294676
		u_int16_t	timeOff;10003,294720
athff_approx_txtime(10064,296607
athff_can_aggregate(10099,297800
#define US_PER_4MS 10108,298132
#define	MIN(10109,298156
#undef US_PER_4MS10148,299257
#undef MIN10149,299275
ath_printrxbuf(10156,299325
ath_printtxbuf(10178,300194
ath_getstats(10207,301309
ath_set_mac_address(10230,301994
ath_change_mtu(10259,302702
ath_ioctl_diag(10291,303568
ath_ioctl(10346,304948
	ATH_SLOTTIME	10404,306552
	ATH_ACKTIMEOUT	10405,306572
	ATH_CTSTIMEOUT	10406,306594
	ATH_SOFTLED	10407,306616
	ATH_LEDPIN	10408,306635
	ATH_COUNTRYCODE	10409,306653
	ATH_REGDOMAIN	10410,306676
	ATH_DEBUG	10411,306697
	ATH_TXANTENNA	10412,306714
	ATH_RXANTENNA	10413,306735
	ATH_DIVERSITY	10414,306757
	ATH_TXINTRPERIOD	10415,306779
	ATH_FFTXQMIN	10416,306803
	ATH_XR_POLL_PERIOD	10417,306824
	ATH_XR_POLL_COUNT	10418,306850
	ATH_ACKRATE	10419,306875
	ATH_RP 10420,306895
	ATH_RP_PRINT 10421,306919
	ATH_RP_PRINT_ALL 10422,306943
	ATH_RP_PRINT_MEM 10423,306968
	ATH_RP_PRINT_MEM_ALL 10424,306993
	ATH_RP_FLUSH 10425,307022
	ATH_PANIC 10426,307046
	ATH_RP_IGNORED 10427,307077
	ATH_RADAR_IGNORED 10428,307101
	ATH_MAXVAPS 10429,307132
ATH_SYSCTL_DECL(10433,307169
static int mincalibrate 10690,312715
static int maxint 10691,312765
static const ctl_table ath_sysctl_template[ath_sysctl_template10693,312816
ath_dynamic_sysctl_register(10858,316974
ath_dynamic_sysctl_unregister(10923,319094
ath_announce(10943,319545
#define	HAL_MODE_DUALBAND	10945,319584
#undef HAL_MODE_DUALBAND11001,321264
static ctl_table ath_static_sysctls[ath_static_sysctls11008,321422
static ctl_table ath_ath_table[ath_ath_table11057,322572
static ctl_table ath_root_table[ath_root_table11064,322717
static struct ctl_table_header *ath_sysctl_header;ath_sysctl_header11071,322858
ath_sysctl_register(11074,322915
ath_sysctl_unregister(11086,323138
ath_get_hal_status_desc(11094,323310
ath_get_txcont_adj_ratecode(11106,323624
txcont_configure_radio(11142,324659
#define AR5K_AR5212_TXCFG	11291,329909
#define AR5K_AR5212_TXCFG_TXCONT_ENABLE	11292,329945
#define AR5K_AR5212_RSSI_THR	11293,329998
#define AR5K_AR5212_PHY_NF	11294,330037
#define AR5K_AR5212_ADDAC_TEST	11295,330074
#define AR5K_AR5212_DIAG_SW	11296,330115
#define AR5K_AR5212_DIAG_SW_IGNOREPHYCS	11297,330153
#define AR5K_AR5212_DIAG_SW_IGNORENAV	11298,330206
#define AR5K_AR5212_DCU_GBL_IFS_SIFS	11299,330257
#define AR5K_AR5212_DCU_GBL_IFS_SIFS_M	11300,330303
#define AR5K_AR5212_DCU_GBL_IFS_EIFS	11301,330355
#define AR5K_AR5212_DCU_GBL_IFS_EIFS_M	11302,330401
#define AR5K_AR5212_DCU_GBL_IFS_SLOT	11303,330453
#define AR5K_AR5212_DCU_GBL_IFS_SLOT_M	11304,330499
#define AR5K_AR5212_DCU_GBL_IFS_MISC	11305,330551
#define	AR5K_AR5212_DCU_GBL_IFS_MISC_LFSR_SLICE	11306,330597
#define	AR5K_AR5212_DCU_GBL_IFS_MISC_TURBO_MODE	11307,330657
#define	AR5K_AR5212_DCU_GBL_IFS_MISC_SIFS_DUR_USEC	11308,330717
#define	AR5K_AR5212_DCU_GBL_IFS_MISC_USEC_DUR	11309,330779
#define	AR5K_AR5212_DCU_GBL_IFS_MISC_DCU_ARB_DELAY	11310,330837
#define	AR5K_AR5212_DCU_MISC_POST_FR_BKOFF_DIS	11311,330899
#define	AR5K_AR5212_DCU_CHAN_TIME_DUR	11312,330958
#define	AR5K_AR5212_DCU_CHAN_TIME_ENABLE	11313,331009
#define	AR5K_AR5212_QCU(11314,331062
#define	AR5K_AR5212_DCU(11315,331130
#define AR5K_AR5212_DCU_MISC(11316,331203
#define AR5K_AR5212_DCU_CHAN_TIME(11317,331266
#undef AR5K_AR5212_TXCFG11375,333894
#undef AR5K_AR5212_TXCFG_TXCONT_ENABLE11376,333919
#undef AR5K_AR5212_RSSI_THR11377,333958
#undef AR5K_AR5212_PHY_NF11378,333986
#undef AR5K_AR5212_ADDAC_TEST11379,334012
#undef AR5K_AR5212_DIAG_SW11380,334042
#undef AR5K_AR5212_DIAG_SW_IGNOREPHYCS11381,334069
#undef AR5K_AR5212_DIAG_SW_IGNORENAV11382,334108
#undef AR5K_AR5212_DCU_GBL_IFS_SIFS11383,334145
#undef AR5K_AR5212_DCU_GBL_IFS_SIFS_M11384,334181
#undef AR5K_AR5212_DCU_GBL_IFS_EIFS11385,334219
#undef AR5K_AR5212_DCU_GBL_IFS_EIFS_M11386,334255
#undef AR5K_AR5212_DCU_GBL_IFS_SLOT11387,334293
#undef AR5K_AR5212_DCU_GBL_IFS_SLOT_M11388,334329
#undef AR5K_AR5212_DCU_GBL_IFS_MISC11389,334367
#undef AR5K_AR5212_DCU_GBL_IFS_MISC_LFSR_SLICE11390,334403
#undef AR5K_AR5212_DCU_GBL_IFS_MISC_TURBO_MODE11391,334450
#undef AR5K_AR5212_DCU_GBL_IFS_MISC_SIFS_DUR_USEC11392,334497
#undef AR5K_AR5212_DCU_GBL_IFS_MISC_USEC_DUR11393,334547
#undef AR5K_AR5212_DCU_GBL_IFS_MISC_DCU_ARB_DELAY11394,334592
#undef AR5K_AR5212_DCU_MISC_POST_FR_BKOFF_DIS11395,334642
#undef AR5K_AR5212_DCU_CHAN_TIME_DUR11396,334688
#undef AR5K_AR5212_DCU_CHAN_TIME_ENABLE11397,334725
#undef AR5K_AR5212_QCU11398,334765
#undef AR5K_AR5212_DCU11399,334788
#undef AR5K_AR5212_DCU_MISC11400,334811
#undef AR5K_AR5212_DCU_CHAN_TIME11401,334839
txcont_queue_packet(11416,335192
txcont_on(11549,339491
txcont_off(11570,340065
ath_get_dfs_testmode(11584,340364
ath_set_dfs_testmode(11611,341615
ath_get_txcont(11621,341919
ath_set_txcont(11631,342192
ath_set_txcont_power(11639,342415
ath_get_txcont_power(11657,342914
ath_set_txcont_rate(11667,343220
ath_get_txcont_rate(11684,343698
ath_set_dfs_cac_time(11694,344015
ath_get_dfs_cac_time(11704,344342
ath_set_dfs_excl_period(11724,345232
ath_get_dfs_excl_period(11733,345481
ath_test_radar(11745,345836
ath_dump_hal_map(11760,346365
ath_interrupt_dfs_cac(11772,346749
ath_radar_detected(11804,347924
ath_rcv_dev_event(11867,349831
ath_print_register_details(11892,350491
#define AR5K_AR5212_PHY_ERR_FIL	11896,350640
#define AR5K_AR5212_PHY_ERR_FIL_RADAR	11897,350684
#define AR5K_AR5212_PHY_ERR_FIL_OFDM	11898,350733
#define AR5K_AR5212_PHY_ERR_FIL_CCK 11899,350781
#define AR5K_AR5212_PIMR	11900,350832
#define AR5K_AR5212_PISR	11901,350869
#define AR5K_AR5212_PIMR_RXOK	11902,350906
#define AR5K_AR5212_PIMR_RXDESC	11903,350948
#define AR5K_AR5212_PIMR_RXERR	11904,350992
#define AR5K_AR5212_PIMR_RXNOFRM	11905,351035
#define AR5K_AR5212_PIMR_RXEOL	11906,351079
#define AR5K_AR5212_PIMR_RXORN	11907,351122
#define AR5K_AR5212_PIMR_TXOK	11908,351165
#define AR5K_AR5212_PIMR_TXDESC	11909,351207
#define AR5K_AR5212_PIMR_TXERR	11910,351251
#define AR5K_AR5212_PIMR_TXNOFRM	11911,351294
#define AR5K_AR5212_PIMR_TXEOL	11912,351338
#define AR5K_AR5212_PIMR_TXURN	11913,351381
#define AR5K_AR5212_PIMR_MIB	11914,351424
#define AR5K_AR5212_PIMR_SWI	11915,351465
#define AR5K_AR5212_PIMR_RXPHY	11916,351506
#define AR5K_AR5212_PIMR_RXKCM	11917,351549
#define AR5K_AR5212_PIMR_SWBA	11918,351592
#define AR5K_AR5212_PIMR_BRSSI	11919,351634
#define AR5K_AR5212_PIMR_BMISS	11920,351677
#define AR5K_AR5212_PIMR_HIUERR	11921,351720
#define AR5K_AR5212_PIMR_BNR	11922,351764
#define AR5K_AR5212_PIMR_RXCHIRP	11923,351805
#define AR5K_AR5212_PIMR_TIM	11924,351849
#define AR5K_AR5212_PIMR_BCNMISC	11925,351890
#define AR5K_AR5212_PIMR_GPIO	11926,351934
#define AR5K_AR5212_PIMR_QCBRORN	11927,351976
#define AR5K_AR5212_PIMR_QCBRURN	11928,352020
#define AR5K_AR5212_PIMR_QTRIG	11929,352064
#undef AR5K_AR5212_PHY_ERR_FIL12011,356665
#undef AR5K_AR5212_PHY_ERR_FIL_RADAR12012,356696
#undef AR5K_AR5212_PHY_ERR_FIL_OFDM12013,356733
#undef AR5K_AR5212_PHY_ERR_FIL_CCK12014,356769
#undef AR5K_AR5212_PIMR12015,356804
#undef AR5K_AR5212_PISR12016,356828
#undef AR5K_AR5212_PIMR_RXOK12017,356852
#undef AR5K_AR5212_PIMR_RXDESC12018,356881
#undef AR5K_AR5212_PIMR_RXERR12019,356912
#undef AR5K_AR5212_PIMR_RXNOFRM12020,356942
#undef AR5K_AR5212_PIMR_RXEOL12021,356974
#undef AR5K_AR5212_PIMR_RXORN12022,357004
#undef AR5K_AR5212_PIMR_TXOK12023,357034
#undef AR5K_AR5212_PIMR_TXDESC12024,357063
#undef AR5K_AR5212_PIMR_TXERR12025,357094
#undef AR5K_AR5212_PIMR_TXNOFRM12026,357124
#undef AR5K_AR5212_PIMR_TXEOL12027,357156
#undef AR5K_AR5212_PIMR_TXURN12028,357186
#undef AR5K_AR5212_PIMR_MIB12029,357216
#undef AR5K_AR5212_PIMR_SWI12030,357244
#undef AR5K_AR5212_PIMR_RXPHY12031,357272
#undef AR5K_AR5212_PIMR_RXKCM12032,357302
#undef AR5K_AR5212_PIMR_SWBA12033,357332
#undef AR5K_AR5212_PIMR_BRSSI12034,357361
#undef AR5K_AR5212_PIMR_BMISS12035,357391
#undef AR5K_AR5212_PIMR_HIUERR12036,357421
#undef AR5K_AR5212_PIMR_BNR12037,357452
#undef AR5K_AR5212_PIMR_RXCHIRP12038,357480
#undef AR5K_AR5212_PIMR_TIM12039,357512
#undef AR5K_AR5212_PIMR_BCNMISC12040,357540
#undef AR5K_AR5212_PIMR_GPIO12041,357572
#undef AR5K_AR5212_PIMR_QCBRORN12042,357601
#undef AR5K_AR5212_PIMR_QCBRURN12043,357633
#undef AR5K_AR5212_PIMR_QTRIG12044,357665
ath_print_register_delta(12055,358108
#define BIT_UNCHANGED_ON 12058,358233
#define BIT_UNCHANGED_OFF 12059,358263
#define BIT_CHANGED_ON 12060,358293
#define BIT_CHANGED_OFF 12061,358323
#define NYBBLE_SEPARATOR 12062,358353
#define BYTE_SEPARATOR 12063,358383
#define BIT_STATUS(12064,358413
#undef BIT_UNCHANGED_ON12137,360198
#undef BIT_UNCHANGED_OFF12138,360222
#undef BIT_CHANGED_ON12139,360247
#undef BIT_CHANGED_OFF12140,360269
#undef NYBBLE_SEPARATOR12141,360292
#undef BYTE_SEPARATOR12142,360316
#undef BIT_STATUS12143,360338
ath_lookup_register_name(12152,360664
#define keytable_entry_reg_count 12444,378428
#define keytable_entry_size 12445,378465
#undef keytable_entry_reg_count12463,379241
#undef keytable_entry_size12464,379273
ath_print_register(12492,379966
ath_regdump_filter(12505,380454
	#define UNFILTERED 12509,380602
	#define FILTERED 12510,380631
	#undef UNFILTERED12533,381610
	#undef FILTERED12534,381629
ath_ar5212_registers_dump(12541,381800
ath_ar5212_registers_dump_delta(12561,382460
ath_ar5212_registers_mark(12588,383353
ath_read_register(12603,383789
ath_write_register(12633,384821
ath_registers_dump(12661,385595
ath_registers_mark(12673,385962
ath_registers_dump_delta(12685,386286
ath_return_txbuf_locked_debug(12696,386576
ath_return_txbuf_debug(12742,387851
ath_return_txbuf_list_debug(12760,388310
ath_return_txbuf_list_locked_debug(12786,388946
cleanup_ath_buf_debug(12812,389624

ath_rate/amrr/amrr.c,1441
#define	AMRR_DEBUG73,2747
#define	DPRINTF(75,2784
#define	DPRINTF(80,2910
static int ath_rateinterval 83,2949
static int ath_rate_max_success_threshold 84,3016
static int ath_rate_min_success_threshold 85,3064
ath_rate_node_init(93,3380
ath_rate_node_cleanup(100,3540
ath_rate_findrate(105,3622
ath_rate_get_mrr(120,3979
ath_rate_tx_complete(134,4393
ath_rate_newassoc(162,5104
node_reset 169,5245
ath_rate_update(189,5814
ath_rate_ctl_start(266,8300
#define	RATE(268,8370
#undef RATE303,9591
ath_rate_cb(307,9618
ath_rate_newstate(316,9817
ath_rate_ctl(364,11165
#define is_success(370,11318
#define is_enough(371,11396
#define is_failure(372,11448
#define is_max_rate(373,11524
#define is_min_rate(374,11596
ath_ratectl(428,13189
ath_rate_attach(455,13953
ath_rate_detach(475,14403
static int minrateinterval 484,14570
static int maxint 485,14616
static int min_threshold 486,14666
static ctl_table ath_rate_static_sysctls[ath_rate_static_sysctls492,14738
static ctl_table ath_rate_table[ath_rate_table522,15584
static ctl_table ath_ath_table[ath_ath_table529,15737
static ctl_table ath_root_table[ath_root_table536,15878
static struct ctl_table_header *ath_sysctl_header;ath_sysctl_header543,16019
static struct ieee80211_rate_ops ath_rate_ops 545,16071
static char *version version559,16476
static char *dev_info dev_info560,16528
init_ath_rate_amrr(572,16803
exit_ath_rate_amrr(587,17095

ath_rate/amrr/ath_rate_amrr.mod.c,87
struct module __this_module7,124
__attribute_used__18,399
__attribute_used__44,1257

ath_rate/sample/ath_rate_sample.mod.c,87
struct module __this_module7,124
__attribute_used__18,399
__attribute_used__45,1292

ath_rate/sample/sample.c,1314
#define	SAMPLE_DEBUG71,2552
	ATH_DEBUG_RATE	74,2600
	ATH_DEBUG_RATE		= 0x00000010,x0000001074,2600
	ATH_DEBUG_ANY	75,2650
	ATH_DEBUG_ANY		= 0xffffffffxffffffff75,2650
#define	DPRINTF(77,2682
#define	DPRINTF(82,2806
static char *version version113,4074
static char *dev_info dev_info114,4126
#define STALE_FAILURE_TIMEOUT_MS 117,4171
#define MIN_SWITCH_MS 118,4210
#define ENABLE_MRR 120,4238
static int ath_smoothing_rate 122,4260
static int ath_sample_rate 123,4331
size_to_bin(130,4540
bin_to_size(141,4731
rate_to_ndx(146,4812
calc_usecs_unicast_packet(159,5045
ath_rate_node_init(262,7510
ath_rate_node_cleanup(269,7670
ath_rate_node_copy(275,7758
static __inline int best_rate_ndx(288,8135
pick_sample_ndx(321,8949
ath_rate_findrate(373,10308
ath_rate_get_mrr(506,14537
update_stats(532,15210
ath_rate_tx_complete(653,19044
ath_rate_newassoc(807,23373
ath_rate_ctl_reset(819,23684
ath_rate_cb(937,27268
ath_rate_newstate(946,27458
ath_rate_attach(962,27886
ath_rate_detach(983,28383
proc_read_nodes(991,28539
proc_ratesample_open(1059,30382
static struct file_operations proc_ratesample_ops 1097,31498
ath_rate_dynamic_proc_register(1105,31648
static struct ieee80211_rate_ops ath_rate_ops 1113,31977
init_ath_rate_sample(1137,32676
exit_ath_rate_sample(1145,32860

ath_rate/onoe/onoe.c,1331
#define	ONOE_DEBUG69,2563
	ATH_DEBUG_RATE	72,2607
	ATH_DEBUG_RATE	= 0x00000010,x0000001072,2607
#define	DPRINTF(74,2659
#define	DPRINTF(79,2791
static int ath_rateinterval 101,3784
static int ath_rate_raise 102,3850
static int ath_rate_raise_threshold 103,3911
ath_rate_node_init(110,4213
ath_rate_node_cleanup(117,4373
ath_rate_findrate(122,4455
ath_rate_get_mrr(137,4803
ath_rate_tx_complete(151,5165
ath_rate_newassoc(171,5683
ath_rate_update(178,5824
ath_rate_ctl_start(251,8287
#define	RATE(253,8357
#undef RATE289,9605
ath_rate_cb(293,9632
ath_rate_newstate(302,9831
ath_rate_ctl(337,10729
ath_rate_attach(407,12510
ath_rate_detach(424,12851
static int minrateinterval 432,12993
static int maxpercent 433,13039
static int minpercent 434,13080
static int maxint 435,13117
static ctl_table ath_rate_static_sysctls[ath_rate_static_sysctls440,13208
static ctl_table ath_rate_table[ath_rate_table468,13931
static ctl_table ath_ath_table[ath_ath_table475,14084
static ctl_table ath_root_table[ath_root_table482,14225
static struct ctl_table_header *ath_sysctl_header;ath_sysctl_header489,14366
static struct ieee80211_rate_ops ath_rate_ops 491,14418
static char *version version505,14823
static char *dev_info dev_info506,14875
init_ath_rate_onoe(518,15188
exit_ath_rate_onoe(533,15480

ath_rate/onoe/ath_rate_onoe.mod.c,87
struct module __this_module7,124
__attribute_used__18,399
__attribute_used__41,1168

ath_rate/minstrel/ath_rate_minstrel.mod.c,87
struct module __this_module7,124
__attribute_used__18,399
__attribute_used__50,1455

ath_rate/minstrel/minstrel.c,1337
#define	MINSTREL_DEBUG120,5153
		ATH_DEBUG_RATE	123,5205
		ATH_DEBUG_RATE		= 0x00000010	x00000010123,5205
#define	DPRINTF(125,5258
#define	DPRINTF(130,5387
#define ONE_SECOND 133,5426
static char *version version137,5546
static char *dev_info dev_info138,5598
#define STALE_FAILURE_TIMEOUT_MS 140,5644
#define ENABLE_MRR 141,5683
static int ath_timer_interval 143,5705
static int ath_lookaround_rate 149,6044
static int ath_ewma_level 150,6081
static int ath_segment_size 151,6118
rate_to_ndx(176,7127
calc_usecs_unicast_packet(187,7367
ath_rate_node_init(289,9895
ath_rate_node_cleanup(297,10058
ath_rate_node_copy(303,10146
ath_rate_findrate(313,10446
ath_rate_get_mrr(390,12779
ath_rate_tx_complete(440,14323
ath_rate_newassoc(537,17339
ath_fill_sample_table(546,17578
ath_rate_ctl_reset(596,19115
ath_rate_cb(728,23024
ath_rate_newstate(735,23211
ath_timer_function(749,23620
ath_rate_statistics(793,24766
ath_rate_attach(879,27688
ath_rate_detach(908,28365
ath_proc_read_nodes(919,28603
ath_proc_ratesample_open(986,30923
static struct file_operations ath_proc_ratesample_ops 1021,31980
ath_rate_dynamic_proc_register(1029,32142
static struct ieee80211_rate_ops ath_rate_ops 1037,32361
static int __init ath_rate_minstrel_init(1060,33073
static void __exit ath_rate_minstrel_exit(1074,33619

net80211/wlan_scan_sta.mod.c,87
struct module __this_module7,124
__attribute_used__18,399
__attribute_used__57,1771

net80211/ieee80211_output.c,1782
#define	EXPORT_SYMTAB35,1787
doprint(68,2507
ieee80211_classify(83,2903
ieee80211_hardstart(202,5515
void ieee80211_parent_queue_xmit(315,8621
ieee80211_send_setup(337,9209
#define	WH4(345,9449
#undef WH4391,10975
ieee80211_mgmt_output(402,11350
ieee80211_send_nulldata(452,12885
ieee80211_send_qosnulldata(501,14290
ieee80211_skbhdr_adjust(565,16137
#define	KEY_UNDEFINED(716,20878
ieee80211_crypto_getucastkey(723,21166
ieee80211_crypto_getmcastkey(740,21699
ieee80211_encap(758,22358
#define	WH4(760,22439
#undef WH41214,35730
#undef KEY_UNDEFINED1217,35775
ieee80211_add_rates(1223,35863
ieee80211_add_xrates(1240,36231
ieee80211_add_ssid(1259,36689
ieee80211_add_erp(1271,36905
ieee80211_add_country(1292,37391
ieee80211_add_pwrcnstr(1305,37684
ieee80211_add_pwrcap(1320,38034
ieee80211_add_suppchan(1336,38427
ieee80211_setup_wpa_ie(1345,38628
#define	WPA_OUI_BYTES	1347,38693
#define	ADDSHORT(1348,38733
#define	ADDSELECTOR(1353,38845
#undef ADDSHORT1425,41058
#undef ADDSELECTOR1426,41074
#undef WPA_OUI_BYTES1427,41093
ieee80211_setup_rsn_ie(1431,41135
#define	RSN_OUI_BYTES	1433,41200
#define	ADDSHORT(1434,41240
#define	ADDSELECTOR(1439,41352
#undef ADDSELECTOR1508,43360
#undef ADDSHORT1509,43379
#undef RSN_OUI_BYTES1510,43395
ieee80211_add_wpa(1517,43474
#define	WME_OUI_BYTES	1528,43774
ieee80211_add_wme(1533,43877
ieee80211_add_wme_param(1570,44857
#define	SM(1573,44950
#define	ADDSHORT(1574,44993
#undef ADDSHORT1608,46092
#undef WME_OUI_BYTES1610,46110
ieee80211_add_athAdvCap(1616,46208
ieee80211_add_xr_param(1642,47019
ieee80211_send_probereq(1684,48490
ieee80211_send_mgmt(1760,50723
#define	senderr(1762,50791
#undef senderr2195,63969
ieee80211_send_pspoll(2202,64063
ieee80211_getcfframe(2237,65096

net80211/wlan_wep.mod.c,87
struct module __this_module7,124
__attribute_used__18,399
__attribute_used__41,1144

net80211/ieee80211_node.c,2728
#define	EXPORT_SYMTAB35,1786
#define	IEEE80211_AID_SET(59,2237
#define	IEEE80211_AID_CLR(62,2366
#define	IEEE80211_AID_ISSET(65,2497
#define ieee80211_alloc_node(70,2659
#define node_table_leave_locked(98,3759
#define node_table_join_locked(108,4144
ieee80211_node_attach(129,4952
ieee80211_node_detach(154,5648
ieee80211_node_vattach(161,5776
ieee80211_node_latevattach(171,6059
ieee80211_node_vdetach(236,8163
ieee80211_node_authorize(253,8557
ieee80211_node_unauthorize(261,8747
ieee80211_node_set_chan(272,9016
copy_bss_state(287,9433
ieee80211_create_ibss(300,9791
ieee80211_reset_bss(402,13028
match_ssid(432,13894
check_bss(449,14230
check_bss_debug(493,15477
ieee80211_ibss_merge(562,17835
ssid_equal(596,18939
ieee80211_sta_join1(608,19279
ieee80211_sta_join1_tasklet(673,21154
ieee80211_sta_join(685,21462
ieee80211_sta_leave(750,23546
ieee80211_node_table_init(768,23902
node_table_join_locked_debug(787,24518
node_table_leave_locked_debug(813,25166
node_alloc_debug(842,25919
node_cleanup_debug(865,26614
static void node_print_message(923,28362
node_free_debug(979,29925
node_count(1009,30744
node_getrssi(1015,30844
ieee80211_alloc_node_table_debug(1033,31414
ieee80211_alloc_node_debug(1083,32814
ieee80211_add_wds_addr_debug(1132,34078
ieee80211_remove_wds_addr_debug(1175,35286
ieee80211_del_wds_node_debug(1209,36223
ieee80211_node_wds_ageout(1241,37076
ieee80211_dup_bss_debug(1271,38069
ieee80211_find_wds_node_locked_debug(1312,39199
#define	ieee80211_find_node_locked(1340,40060
ieee80211_find_node_locked_debug(1346,40239
ieee80211_find_wds_node_debug(1387,41261
ieee80211_find_node_debug(1412,41943
ieee80211_fakeup_adhoc_node_debug(1446,42848
ieee80211_add_neighbor(1475,43683
ieee80211_find_rxnode_debug(1535,45657
#define	IS_CTL(1542,45878
#define	IS_PSPOLL(1544,45968
#undef IS_PSPOLL1568,46705
#undef IS_CTL1569,46722
ieee80211_find_txnode_debug(1585,47107
ieee80211_free_node_debug(1657,49040
static void _reset_node(1689,49908
ieee80211_node_table_reset(1704,50244
ieee80211_node_table_cleanup(1711,50414
ieee80211_timeout_stations(1749,51571
ieee80211_node_timeout(1865,55043
ieee80211_iterate_nodes(1877,55312
ieee80211_iterate_dev_nodes(1884,55502
ieee80211_dump_node(1914,56237
ieee80211_dump_nodes(1944,57363
ieee80211_node_join_11g(1954,57566
count_suppchans(2026,59845
remove_worse_nodes(2040,60133
ieee80211_node_join(2067,60913
ieee80211_node_leave_11g(2177,64338
ieee80211_node_leave(2244,66371
ieee80211_getrssi(2324,68609
#define	NZ(2326,68654
#undef NZ2372,69991
ieee80211_node_reset(2377,70043
ieee80211_ref_node_debug(2389,70377
ieee80211_unref_node_debug(2434,71457
ieee80211_get_node_count(2493,72896

net80211/ieee80211_beacon.c,128
#define	EXPORT_SYMTAB35,1787
ieee80211_beacon_init(55,2137
ieee80211_beacon_alloc(191,5780
ieee80211_beacon_update(282,8616

net80211/ieee80211_monitor.c,1203
#define	EXPORT_SYMTAB31,1557
ratecode_to_dot11(66,2218
struct ar5212_openbsd_desc 90,2647
	u_int32_t frame_len:frame_len94,2702
	u_int32_t reserved_12_15:reserved_12_1595,2727
	u_int32_t xmit_power:xmit_power96,2756
	u_int32_t rts_cts_enable:rts_cts_enable97,2781
	u_int32_t veol:veol98,2810
	u_int32_t clear_dest_mask:clear_dest_mask99,2829
	u_int32_t ant_mode_xmit:ant_mode_xmit100,2859
	u_int32_t inter_req:inter_req101,2887
	u_int32_t encrypt_key_valid:encrypt_key_valid102,2911
	u_int32_t cts_enable:cts_enable103,2943
	u_int32_t r1;105,2969
	u_int32_t rts_duration:rts_duration110,3011
	u_int32_t duration_update_enable:duration_update_enable111,3039
	u_int32_t xmit_tries0:xmit_tries0112,3076
	u_int32_t xmit_tries1:xmit_tries1113,3102
	u_int32_t xmit_tries2:xmit_tries2114,3128
	u_int32_t xmit_tries3:xmit_tries3115,3154
	u_int32_t xmit_rate0:xmit_rate0120,3207
	u_int32_t xmit_rate1:xmit_rate1121,3232
	u_int32_t xmit_rate2:xmit_rate2122,3257
	u_int32_t xmit_rate3:xmit_rate3123,3282
	u_int32_t rts_cts_rate:rts_cts_rate124,3307
	u_int32_t reserved_25_31:reserved_25_31125,3334
ieee80211_monitor_encap(129,3372
ieee80211_input_monitor(301,8013

net80211/wlan_acl.mod.c,87
struct module __this_module7,124
__attribute_used__18,399
__attribute_used__39,1076

net80211/ieee80211_crypto_ccmp.c,861
#define AES_BLOCK_LEN 58,2285
#define	crypto_cipher	61,2359
struct ccmp_ctx 64,2400
	struct ieee80211vap *cc_vap;cc_vap65,2418
	struct ieee80211com *cc_ic;cc_ic66,2483
	struct crypto_cipher *cc_tfm;cc_tfm67,2512
static const struct ieee80211_cipher ccmp 78,3008
ccmp_attach(98,3614
ccmp_detach(148,4715
ccmp_setkey(164,5013
ccmp_encap(185,5483
ccmp_enmic(225,6476
READ_6(231,6588
ccmp_decap(244,6975
ccmp_demic(314,8787
xor_block(320,8907
rijndael_encrypt(328,9017
ccmp_init_blocks(362,10015
#define	IS_4ADDRESS(367,10234
#define	IS_QOS_DATA(369,10330
#undef	IS_QOS_DATA454,12756
#undef	IS_4ADDRESS455,12775
#define	CCMP_ENCRYPT(458,12797
ccmp_encrypt(470,13152
#undef CCMP_ENCRYPT569,15673
#define	CCMP_DECRYPT(571,15694
ccmp_decrypt(583,16046
#undef CCMP_DECRYPT676,18547
init_crypto_ccmp(689,18783
exit_crypto_ccmp(697,18907

net80211/ieee80211_xauth.c,149
#define	EXPORT_SYMTAB34,1743
static const struct ieee80211_authenticator xauth 80,2995
init_ieee80211_xauth(89,3182
exit_ieee80211_xauth(98,3407

net80211/ieee80211_scan_ap.c,2913
#define	EXPORT_SYMTAB34,1753
#define	AP_PURGE_SCANS	60,2207
#define RSSI_LPF_LEN	61,2272
#define	RSSI_EP_MULTIPLIER	62,2296
#define RSSI_IN(63,2367
#define LPF_RSSI(64,2414
#define RSSI_LPF(65,2478
#define	EP_RND(69,2602
#define	RSSI_GET(71,2687
#define	AP_HASHSIZE	72,2737
#define	AP_HASH(74,2813
#define	SCAN_AP_LOCK_INIT(76,2905
#define	SCAN_AP_LOCK_DESTROY(78,2982
#define	SCAN_AP_LOCK_IRQ(79,3016
#define	SCAN_AP_UNLOCK_IRQ(82,3145
#define	SCAN_AP_UNLOCK_IRQ_EARLY(85,3256
#define	SCAN_AP_GEN_LOCK_INIT(88,3358
#define	SCAN_AP_GEN_LOCK_DESTROY(90,3442
#define	SCAN_AP_GEN_LOCK(91,3480
#define	SCAN_AP_GEN_UNLOCK(92,3543
struct scan_entry 94,3610
	struct ieee80211_scan_entry base;95,3630
	TAILQ_ENTRY(96,3665
struct ap_state 107,4102
	unsigned int as_vap_desired_mode;108,4120
	unsigned int as_required_mode;110,4222
	int as_maxrssi[as_maxrssi113,4357
	spinlock_t as_lock;117,4555
	int as_newscan;118,4598
	TAILQ_HEAD(120,4679
static const u_int16_t rcl1[rcl1149,5822
static const u_int16_t rcl2[rcl2152,5983
static const u_int16_t rcl3[rcl3154,6081
static const u_int16_t rcl4[rcl4156,6177
static const u_int16_t rcl7[rcl7158,6284
static const u_int16_t rcl8[rcl8162,6515
static const u_int16_t rcl9[rcl9164,6635
static const u_int16_t rcl10[rcl10166,6698
static const u_int16_t rcl11[rcl11168,6851
static const u_int16_t rcl5[rcl5171,6999
static const u_int16_t rcl6[rcl6173,7084
static const u_int16_t rcl6x[rcl6x175,7163
static const u_int16_t rcl12[rcl12177,7253
static const u_int16_t rcl13[rcl13179,7326
struct scanlist 183,7452
	u_int16_t	mode;184,7470
	u_int16_t	count;185,7487
	const u_int16_t	*list;list186,7505
#define	IEEE80211_MODE_TURBO_STATIC_A	189,7533
#define	X(190,7590
static const struct scanlist staScanTable[staScanTable192,7638
#undef X214,8365
add_channels(217,8442
checktable(246,9302
ap_attach(262,9585
ap_detach(285,10077
ap_flush(303,10358
saveie(322,10867
find11gchannel(332,11072
ap_start(357,11698
ap_restart(468,15148
ap_cancel(479,15336
ap_add(490,15550
struct pc_params 585,18421
	struct ieee80211vap *vap;vap586,18440
	struct ieee80211_scan_state *ss;ss587,18467
	int flags;588,18501
struct channel 591,18517
	struct ieee80211_channel *chan;chan592,18534
	int orig;593,18567
	struct pc_params *params;params594,18578
pc_cmp_radar(599,18676
pc_cmp_keepmode(607,18959
pc_cmp_sc(625,19485
pc_cmp_rssi(636,19800
pc_cmp_samechan(647,20101
pc_cmp_orig(659,20501
pc_cmp(666,20650
#define EVALUATE_CRITERION(674,20931
#undef EVALUATE_CRITERION687,21401
pc_swap(693,21511
pick_channel(712,22083
ap_end(829,25342
ap_age(888,26953
ap_iterate(905,27330
ap_assoc_success(943,28020
ap_assoc_fail(950,28160
ap_default_action(961,28422
action_tasklet(970,28577
static const struct ieee80211_scanner ap_default 1007,29541
init_scanner_ap(1026,30018
exit_scanner_ap(1034,30167

net80211/ieee80211.c,1757
#define	EXPORT_SYMTAB35,1781
const char *ieee80211_phymode_name[ieee80211_phymode_name55,2165
struct country_code_to_string 79,3061
	u_int16_t iso_code;80,3093
	const char *iso_name;iso_name81,3114
#define CTRY_DEBUG 87,3211
#define CTRY_DEFAULT 88,3265
static const  struct country_code_to_string country_strings[country_strings90,3322
ieee80211_ifattach(247,8903
ieee80211_ifdetach(366,12773
ieee80211_vap_setup(391,13305
#define	IEEE80211_C_OPMODE 394,13418
#undef IEEE80211_C_OPMODE520,17340
ieee80211_vap_attach(525,17409
ieee80211_vap_detach(571,18670
ieee80211_mhz2ieee(608,19654
ieee80211_chan2ieee(631,20258
ieee80211_ieee2mhz(645,20609
ieee80211_find_channel(674,21363
ieee80211_media_setup(697,21928
#define	ADD(701,22074
#undef ADD792,25042
ieee80211_dfs_action(804,25408
ieee80211_expire_excl_restrictions(850,26543
ieee80211_update_dfs_excl_timer(891,27758
ieee80211_expire_dfs_excl_timer(929,28654
ieee80211_mark_dfs(1028,31542
ieee80211_dfs_test_return(1128,34619
ieee80211_announce(1142,35104
ieee80211_announce_channels(1180,36150
media_status(1217,37021
ieee80211com_media_status(1263,38098
media2mode(1277,38461
ieee80211com_media_change(1315,39238
findrate(1376,40931
#define	IEEERATE(1378,41006
#undef IEEERATE1385,41240
checkrate(1394,41474
ieee80211_media_change(1419,42107
ieee80211_media_status(1457,43131
ieee80211_setmode(1495,44353
ieee80211_chan2mode(1515,44924
ieee80211_rate2media(1549,45942
		u_int	m;1552,46052
		u_int	r;1553,46081
ieee80211_media2rate(1625,48688
ieee80211_getstats(1663,49756
ieee80211_change_mtu(1692,50654
ieee80211_set_multicast_list(1702,50875
ieee80211_build_countryie(1742,51899
ieee80211_build_sc_ie(1861,55283
int ath_debug_global 1910,56435

net80211/ieee80211_crypto_none.c,207
const struct ieee80211_cipher ieee80211_cipher_none 57,2468
none_attach(74,2870
none_detach(80,2992
none_setkey(86,3056
none_encap(93,3131
none_decap(111,3607
none_enmic(131,4182
none_demic(140,4358

net80211/ieee80211_crypto_tkip.c,1309
static const struct ieee80211_cipher tkip 62,2660
struct tkip_ctx 78,3110
	struct ieee80211vap *tc_vap;tc_vap79,3128
	struct ieee80211com *tc_ic;tc_ic80,3193
	u16	tx_ttak[tx_ttak82,3223
	int	tx_phase1_done;83,3240
	u8	tx_rc4key[tx_rc4key84,3261
	u16	rx_ttak[rx_ttak86,3322
	int	rx_phase1_done;87,3339
	u8	rx_rc4key[rx_rc4key88,3360
	uint64_t rx_rsc;89,3420
tkip_attach(101,3793
tkip_detach(121,4190
tkip_setkey(131,4334
tkip_encap(150,4766
tkip_enmic(207,6228
READ_6(248,7269
tkip_decap(261,7656
tkip_demic(342,9851
static const __u32 crc32_table[crc32_table407,11639
RotR1(463,15082
Lo8(469,15155
Hi8(475,15212
Lo16(481,15268
Hi16(487,15329
Mk16(493,15387
Mk16_le(499,15463
static const u16 Sbox[Sbox504,15518
_S_(540,17653
#define PHASE1_LOOP_COUNT 546,17738
tkip_mixing_phase1(549,17779
tkip_mixing_phase2(575,18496
wep_encrypt(621,19935
#define S_SWAP(623,20008
#undef S_SWAP678,21292
wep_decrypt(682,21320
#define S_SWAP(684,21392
#undef S_SWAP745,22695
rotl(750,22733
rotr(757,22829
xswap(764,22925
#define michael_block(770,23009
get_le32_split(784,23215
get_le32(790,23333
put_le32(797,23430
michael_mic_hdr(809,23588
michael_mic(843,24669
tkip_encrypt(952,27162
tkip_decrypt(996,28234
init_crypto_tkip(1059,30062
exit_crypto_tkip(1067,30186

net80211/ieee80211_acl.c,637
#define	EXPORT_SYMTAB34,1750
	ACL_POLICY_OPEN	62,2516
	ACL_POLICY_ALLOW	63,2568
	ACL_POLICY_DENY	64,2620
#define	ACL_HASHSIZE	67,2675
struct acl 69,2700
	TAILQ_ENTRY(70,2713
struct aclstate 75,2815
	acl_lock_t as_lock;76,2833
	int as_policy;77,2854
	TAILQ_HEAD(78,2870
#define	ACL_HASH(83,3023
acl_detach(111,3624
_find_acl(126,3882
_acl_free(140,4147
acl_check(149,4310
acl_add(165,4659
acl_remove(202,5671
acl_free_all_locked(221,6086
acl_free_all(232,6258
acl_setpolicy(246,6497
acl_getpolicy(270,6986
static const struct ieee80211_aclator mac 287,7293
init_ieee80211_acl(300,7602
exit_ieee80211_acl(308,7730

net80211/ieee80211_wireless.c,7054
#define	IS_UP(69,2592
#define	IS_UP_AUTO(71,2680
#define	RESCAN	74,2791
preempt_scan(80,2918
ieee80211_iw_getstats(115,3873
ieee80211_ioctl_giwname(138,4449
getiwkeyix(169,5391
ieee80211_ioctl_siwencode(190,5881
ieee80211_ioctl_giwencode(299,9221
#define	ifr_media	331,10031
ieee80211_ioctl_siwrate(335,10089
ieee80211_ioctl_giwrate(379,11399
ieee80211_ioctl_siwsens(400,11950
ieee80211_ioctl_giwsens(407,12102
ieee80211_ioctl_siwrts(417,12281
ieee80211_ioctl_giwrts(440,12817
ieee80211_ioctl_siwfrag(453,13103
ieee80211_ioctl_giwfrag(476,13606
ieee80211_ioctl_siwap(489,13881
ieee80211_ioctl_giwap(524,14947
ieee80211_ioctl_siwnickn(545,15542
ieee80211_ioctl_giwnickn(561,15925
find11gchannel(576,16336
findchannel(587,16607
#define	IEEE80211_MODE_TURBO_STATIC_A	629,17785
ieee80211_check_mode_consistency(631,17853
#undef	IEEE80211_MODE_TURBO_STATIC_A667,18514
ieee80211_ioctl_siwfreq(670,18563
ieee80211_ioctl_giwfreq(787,22036
copy_des_ssid(819,22904
ieee80211_ioctl_siwessid(828,23158
ieee80211_ioctl_giwessid(873,24539
ieee80211_ioctl_giwrange(904,25425
ieee80211_ioctl_setspy(1047,29950
ieee80211_ioctl_getspy(1082,30843
ieee80211_ioctl_setthrspy(1134,32316
ieee80211_ioctl_getthrspy(1171,33356
ieee80211_ioctl_siwmode(1192,33886
ieee80211_ioctl_giwmode(1217,34573
ieee80211_ioctl_siwpower(1240,35170
ieee80211_ioctl_giwpower(1279,36128
ieee80211_ioctl_siwretry(1303,36751
ieee80211_ioctl_giwretry(1335,37525
ieee80211_ioctl_siwtxpow(1366,38274
ieee80211_get_txcont(1422,39766
ieee80211_get_dfs_cac_time(1433,40036
ieee80211_get_dfs_excl_period(1444,40318
ieee80211_set_dfs_cac_time(1454,40605
ieee80211_set_dfs_excl_period 1464,40885
ieee80211_get_dfs_testmode(1475,41174
ieee80211_get_txcont_rate(1486,41456
ieee80211_set_txcont(1497,41736
ieee80211_set_dfs_testmode(1508,42005
ieee80211_set_txcont_rate(1519,42286
ieee80211_set_txcont_power(1530,42565
ieee80211_get_txcont_power(1541,42846
ieee80211_ioctl_hal_map(1552,43129
ieee80211_ioctl_radar(1564,43439
ieee80211_ioctl_giwtxpow(1577,43761
ieee80211_dump_registers(1592,44195
ieee80211_ioctl_writereg(1615,44705
ieee80211_ioctl_readreg(1626,45079
struct waplistreq 1635,45410
	struct ieee80211vap *vap;vap1636,45478
	struct sockaddr addr[addr1637,45505
	struct iw_quality qual[qual1638,45539
	int i;1639,45575
waplist_cb(1643,45598
ieee80211_ioctl_iwaplist(1662,46055
ieee80211_ioctl_siwscan(1684,46643
encode_ie(1743,48461
struct iwscanreq 1762,48870
	struct ieee80211vap *vap;vap1763,48935
	char *current_ev;current_ev1764,48962
	char *end_buf;end_buf1765,48981
	int mode;1766,48997
giwscan_cb(1770,49023
#define MAX_IE_LENGTH 1777,49238
ieee80211_ioctl_giwscan(2008,55553
cipher2cap(2054,56788
#define	IEEE80211_MODE_TURBO_STATIC_A	2066,57125
ieee80211_convert_mode(2069,57194
#define TOUPPER(2071,57237
		char *name;name2073,57333
		int mode;2074,57347
#undef TOUPPER2105,58218
ieee80211_ioctl_setmode(2109,58247
#undef IEEE80211_MODE_TURBO_STATIC_A2169,59960
ieee80211_setupxr(2173,60031
ieee80211_setathcap(2218,61352
ieee80211_set_turbo(2234,61687
ieee80211_ioctl_setparam(2257,62254
cap2cipher(2875,79814
ieee80211_ioctl_getmode(2889,80170
ieee80211_ioctl_getparam(2927,80993
is_sys_ie(3184,88452
is_valid_ie_list(3221,89431
ieee80211_ioctl_setoptie(3239,89855
ieee80211_ioctl_getoptie(3273,90947
add_app_ie(3289,91354
remove_app_ie(3311,92027
get_app_ie(3323,92295
ieee80211_ioctl_setappiebuf(3336,92651
ieee80211_ioctl_getappiebuf(3379,93847
ieee80211_ioctl_setfilter(3420,95000
ieee80211_ioctl_setkey(3435,95405
ieee80211_ioctl_getkey(3519,98171
ieee80211_ioctl_delkey(3579,100037
domlme(3610,100868
struct scanlookup 3624,101176
	const u_int8_t *mac;mac3625,101237
	int esslen;3626,101259
	const u_int8_t *essid;essid3627,101272
	const struct ieee80211_scan_entry *se;se3628,101296
mlmelookup(3635,101393
ieee80211_ioctl_setmlme(3653,101746
ieee80211_ioctl_wdsmac(3754,104421
ieee80211_ioctl_wdsdelmac(3783,105237
ieee80211_ioctl_kickmac(3827,106501
ieee80211_ioctl_addmac(3846,107076
ieee80211_ioctl_delmac(3864,107522
ieee80211_ioctl_setchanlist(3882,107971
ieee80211_ioctl_getchanlist(3928,109271
ieee80211_ioctl_getchaninfo(3939,109546
ieee80211_ioctl_setwmmparams(3982,110924
ieee80211_ioctl_getwmmparams(4070,113992
ieee80211_ioctl_getwpaie(4106,115156
ieee80211_ioctl_getstastats(4140,116178
struct scanreq 4166,117040
	struct ieee80211req_scan_result *sr;sr4167,117099
	size_t space;4168,117137
scan_space(4172,117170
get_scan_space(4188,117614
get_scan_result(4199,117787
ieee80211_ioctl_getscanresults(4259,119382
struct stainforeq 4293,120206
	struct ieee80211vap *vap;vap4294,120267
	struct ieee80211req_sta_info *si;si4295,120294
	size_t	space;4296,120329
sta_space(4300,120362
get_sta_space(4316,120781
get_sta_info(4332,121241
ieee80211_ioctl_getstainfo(4417,123941
pre_announced_chanswitch(4452,124879
ieee80211_ioctl_chanswitch(4462,125232
ieee80211_ioctl_siwmlme(4479,125619
ieee80211_ioctl_giwgenie(4507,126249
ieee80211_ioctl_siwgenie(4519,126530
siwauth_wpa_version(4527,126717
iwcipher2ieee80211cipher(4548,127200
ieee80211cipher2iwcipher(4565,127555
siwauth_cipher_pairwise(4582,127941
siwauth_cipher_group(4600,128432
siwauth_key_mgmt(4617,128872
siwauth_tkip_countermeasures(4634,129299
siwauth_drop_unencrypted(4644,129577
siwauth_80211_auth_alg(4655,129852
#define VALID_ALGS_MASK 4658,129965
siwauth_wpa_enabled(4681,130571
siwauth_rx_unencrypted_eapol(4697,130939
siwauth_roaming_control(4713,131273
siwauth_privacy_invoked(4734,131741
ieee80211_ioctl_siwauth(4754,132610
giwauth_wpa_version(4803,133929
giwauth_cipher_pairwise(4834,134473
giwauth_cipher_group(4852,134832
giwauth_key_mgmt(4869,135187
giwauth_tkip_countermeasures(4888,135617
giwauth_drop_unencrypted(4903,135924
giwauth_80211_auth_alg(4917,136226
giwauth_wpa_enabled(4924,136374
giwauth_rx_unencrypted_eapol(4940,136656
giwauth_roaming_control(4947,136810
giwauth_privacy_invoked(4972,137275
ieee80211_ioctl_giwauth(4986,137568
ieee80211_ioctl_giwencodeext(5040,139101
ieee80211_ioctl_siwencodeext(5100,140417
#define	IW_PRIV_TYPE_OPTIE	5205,143519
#define	IW_PRIV_TYPE_KEY 5207,143598
#define	IW_PRIV_TYPE_DELKEY 5209,143687
#define	IW_PRIV_TYPE_MLME 5211,143783
#define	IW_PRIV_TYPE_CHANLIST 5213,143874
#define	IW_PRIV_TYPE_CHANINFO 5215,143973
#define IW_PRIV_TYPE_APPIEBUF 5217,144072
#define IW_PRIV_TYPE_FILTER 5219,144200
static const struct iw_priv_args ieee80211_priv_args[ieee80211_priv_args5222,144300
#define set_handler(5623,162393
static const iw_handler ieee80211_handlers[ieee80211_handlers5624,162453
#define set_priv(5677,164894
static const iw_handler ieee80211_priv_handlers[ieee80211_priv_handlers5678,164955
static struct iw_handler_def ieee80211_iw_handler_def 5710,166811
ieee80211_ioctl(5726,167329
ieee80211_ioctl_create_vap(5759,168388
ieee80211_create_vap(5788,169162
ieee80211_ioctl_vattach(5797,169379
ieee80211_ioctl_vdetach(5809,169650

net80211/ieee80211_crypto.c,1088
#define	EXPORT_SYMTAB35,1788
static const struct ieee80211_cipher *ciphers[ciphers59,2239
null_key_alloc(68,2501
null_key_delete(73,2618
null_key_set(79,2745
static void null_key_update(84,2871
null_comp_set(90,2965
cipher_detach(100,3121
cipher_attach(106,3223
dev_key_alloc(115,3429
dev_key_delete(121,3564
dev_key_set(128,3733
dev_comp_set(136,3934
ieee80211_crypto_attach(146,4125
ieee80211_crypto_detach(157,4363
ieee80211_crypto_vattach(166,4504
ieee80211_crypto_vdetach(194,5265
ieee80211_crypto_register(204,5448
ieee80211_crypto_unregister(224,6004
static const char *cipher_modnames[cipher_modnames243,6628
ieee80211_crypto_available(253,6905
ieee80211_crypto_newkey(307,8648
ieee80211_crypto_delkey_locked(442,12777
ieee80211_crypto_delkey(476,13695
ieee80211_crypto_delglobalkeys(498,14176
ieee80211_crypto_setkey(517,14649
ieee80211_crypto_encap(568,16150
ieee80211_crypto_decap(620,17754
#define	IEEE80211_WEP_HDRLEN	622,17839
#define	IEEE80211_WEP_MINLEN 623,17913
#undef IEEE80211_WEP_MINLEN658,19064
#undef IEEE80211_WEP_HDRLEN659,19092

net80211/ieee80211_power.c,390
#define	EXPORT_SYMTAB35,1786
ieee80211_power_attach(58,2228
ieee80211_power_detach(63,2286
ieee80211_power_vattach(68,2344
ieee80211_power_latevattach(78,2569
ieee80211_power_vdetach(97,3125
ieee80211_node_saveq_drain(110,3408
ieee80211_node_saveq_age(138,4279
ieee80211_set_tim(176,5284
ieee80211_pwrsave(210,6194
ieee80211_node_pwrsave(266,7819
ieee80211_sta_pwrsave(348,9956

net80211/wlan_scan_ap.mod.c,87
struct module __this_module7,124
__attribute_used__18,399
__attribute_used__53,1596

net80211/wlan_tkip.mod.c,87
struct module __this_module7,124
__attribute_used__18,399
__attribute_used__43,1247

net80211/ieee80211_proto.c,3047
#define	EXPORT_SYMTAB35,1787
#define	AGGRESSIVE_MODE_SWITCH_HYSTERESIS	55,2128
#define	HIGH_PRI_SWITCH_THRESH	56,2191
#define	IEEE80211_RATE2MBS(58,2247
const char *ieee80211_mgt_subtype_name[ieee80211_mgt_subtype_name60,2311
const char *ieee80211_ctl_subtype_name[ieee80211_ctl_subtype_name67,2612
const char *ieee80211_state_name[ieee80211_state_name74,2904
const char *ieee80211_wme_acnames[ieee80211_wme_acnames82,3161
ieee80211_proto_attach(99,3559
ieee80211_proto_detach(115,3894
ieee80211_proto_vattach(120,3952
ieee80211_proto_vdetach(141,4535
#define	IEEE80211_AUTH_MAX	162,4974
static const char *auth_modnames[auth_modnames164,5051
static const struct ieee80211_authenticator *authenticators[authenticators172,5374
static const struct ieee80211_authenticator auth_internal 174,5456
ieee80211_auth_setup(186,5723
ieee80211_authenticator_get(194,6012
ieee80211_authenticator_register(204,6219
ieee80211_authenticator_unregister(214,6439
static	const struct ieee80211_authenticator_backend *backend backend226,6707
ieee80211_authenticator_backend_register(229,6782
ieee80211_authenticator_backend_unregister(238,7023
ieee80211_authenticator_backend_get(249,7338
static const struct ieee80211_aclator *acl acl259,7599
ieee80211_aclator_register(262,7656
ieee80211_aclator_unregister(270,7855
ieee80211_aclator_get(279,8107
ieee80211_print_essid(289,8335
ieee80211_dump_pkt(315,8856
ieee80211_fix_rate(395,11182
#define	RV(397,11241
#undef RV497,13781
ieee80211_reset_erp(504,13834
#define	IS_11G(506,13910
#undef IS_11G543,15098
ieee80211_set_shortslottime(550,15183
ieee80211_iserp_rateset(566,15538
static const struct ieee80211_rateset basic11g[basic11g588,15989
ieee80211_set11gbasicrates(606,16683
ieee80211_get11gbasicrates(626,17202
ieee80211_wme_initparams(643,17650
ieee80211_wme_initparams_locked(653,17842
	struct phyParamType 657,17989
		u_int8_t aifsn;658,18012
		u_int8_t logcwmin;659,18030
		u_int8_t logcwmax;660,18051
		u_int16_t txopLimit;661,18072
		u_int8_t acm;662,18095
ieee80211_wme_updateparams_locked(813,23858
	static const struct { u_int8_t aifsn;815,23920
	static const struct { u_int8_t aifsn; u_int8_t logcwmin;815,23920
	static const struct { u_int8_t aifsn; u_int8_t logcwmin; u_int8_t logcwmax;815,23920
	static const struct { u_int8_t aifsn; u_int8_t logcwmin; u_int8_t logcwmax; u_int16_t txopLimit;815,23920
ieee80211_wme_updateparams(931,28407
ieee80211_init(947,28758
#define	IS_RUNNING(949,28814
#undef IS_RUNNING1056,31948
ieee80211_open(1060,31973
ieee80211_start_running(1069,32101
ieee80211_stop(1092,32716
ieee80211_stop_running(1127,33568
ieee80211_dturbo_switch(1149,34123
ieee80211_beacon_miss(1180,35086
ieee80211_sta_swbmiss(1236,36702
ieee80211_tx_timeout(1247,36969
sta_disassoc(1268,37565
sta_deauth(1280,37839
ieee80211_new_state(1293,38094
__ieee80211_newstate(1305,38357
static int get_dominant_state(1662,48678
dump_vap_states(1698,49670
ieee80211_newstate(1741,51051
ieee80211_start_xrvap(1956,56980

net80211/wlan.mod.c,88
struct module __this_module7,124
__attribute_used__18,399
__attribute_used__109,3469

net80211/if_media.c,1873
#define	EXPORT_SYMTAB49,2240
#define	ifr_media	62,2501
int ifmedia_debug 79,2830
ifmedia_init(87,2974
ifmedia_removeall(99,3303
ifmedia_add(115,3632
ifmedia_list_add(146,4308
ifmedia_set(162,4701
ifmedia_ioctl(189,5278
ifmedia_match(345,8803
struct ifmedia_description ifm_type_descriptions[ifm_type_descriptions367,9250
struct ifmedia_description ifm_subtype_ethernet_descriptions[ifm_subtype_ethernet_descriptions370,9328
struct ifmedia_description ifm_subtype_ethernet_option_descriptions[ifm_subtype_ethernet_option_descriptions373,9430
struct ifmedia_description ifm_subtype_tokenring_descriptions[ifm_subtype_tokenring_descriptions376,9546
struct ifmedia_description ifm_subtype_tokenring_option_descriptions[ifm_subtype_tokenring_option_descriptions379,9650
struct ifmedia_description ifm_subtype_fddi_descriptions[ifm_subtype_fddi_descriptions382,9768
struct ifmedia_description ifm_subtype_fddi_option_descriptions[ifm_subtype_fddi_option_descriptions385,9862
struct ifmedia_description ifm_subtype_ieee80211_descriptions[ifm_subtype_ieee80211_descriptions388,9970
struct ifmedia_description ifm_subtype_ieee80211_option_descriptions[ifm_subtype_ieee80211_option_descriptions391,10074
struct ifmedia_description ifm_subtype_ieee80211_mode_descriptions[ifm_subtype_ieee80211_mode_descriptions394,10192
struct ifmedia_description ifm_subtype_shared_descriptions[ifm_subtype_shared_descriptions397,10306
struct ifmedia_description ifm_shared_option_descriptions[ifm_shared_option_descriptions400,10404
struct ifmedia_type_to_subtype 403,10500
	struct ifmedia_description *subtypes;subtypes404,10574
	struct ifmedia_description *options;options405,10613
	struct ifmedia_description *modes;modes406,10651
struct ifmedia_type_to_subtype ifmedia_types_to_subtypes[ifmedia_types_to_subtypes410,10748
ifmedia_printword(429,11303

net80211/ieee80211_scan.c,1868
#define	EXPORT_SYMTAB34,1750
struct scan_state 57,2193
	struct ieee80211_scan_state base;58,2213
	u_int ss_iflags;60,2268
#define	ISCAN_MINDWELL 61,2316
#define	ISCAN_DISCARD	62,2378
#define	ISCAN_CANCEL	63,2435
#define	ISCAN_START	64,2491
	unsigned long ss_chanmindwell;65,2553
	unsigned long ss_scanend;66,2613
	u_int ss_duration;67,2667
	struct tasklet_struct ss_pwrsav;68,2718
	struct timer_list ss_scan_timer;69,2777
#define	SCAN_PRIVATE(71,2831
#define	IEEE80211_SCAN_OFFCHANNEL	82,3164
#define	SCAN_VALID_DEFAULT	89,3380
#define	ROAM_RSSI_11A_DEFAULT	90,3445
#define	ROAM_RSSI_11B_DEFAULT	91,3512
#define	ROAM_RSSI_11BONLY_DEFAULT	92,3579
#define	ROAM_RATE_11A_DEFAULT	93,3654
#define	ROAM_RATE_11B_DEFAULT	94,3726
#define	ROAM_RATE_11BONLY_DEFAULT	95,3797
ieee80211_scan_attach(101,3969
ieee80211_scan_detach(121,4465
ieee80211_scan_vattach(139,4871
ieee80211_scan_vdetach(153,5406
#define	IEEE80211_SCANNER_MAX	175,5894
static const char *scan_modnames[scan_modnames177,5949
static const struct ieee80211_scanner *scanners[scanners183,6170
ieee80211_scanner_get(191,6488
ieee80211_scanner_register(208,6935
ieee80211_scanner_unregister(218,7152
ieee80211_scanner_unregister_all(229,7403
change_channel(240,7644
channel_type(248,7783
ieee80211_scan_dump_channels(266,8122
scan_restart_pwrsav(287,8609
scan_restart(318,9557
copy_ssid(350,10434
ieee80211_start_scan(368,10885
ieee80211_check_scan(447,13227
ieee80211_bg_scan(526,15872
ieee80211_cancel_scan(605,18275
scan_next(630,18993
#define	ISCAN_REP	632,19024
#undef ISCAN_REP792,24414
dump_probe_beacon(797,24469
ieee80211_add_scan(832,25345
ieee80211_scan_timeout(890,27219
ieee80211_scan_assoc_success(902,27443
ieee80211_scan_assoc_fail(917,27795
ieee80211_scan_iterate(933,28169
ieee80211_scan_flush(949,28472
ieee80211_scan_dfs_action(966,28859

net80211/ieee80211_rate.c,332
#define	EXPORT_SYMTAB31,1641
static const char *module_names[module_names48,1977
static struct ieee80211_rate_ops ratectls[ratectls58,2256
int ieee80211_rate_register(60,2320
void ieee80211_rate_unregister(72,2576
struct ath_ratectrl *ieee80211_rate_attach(ieee80211_rate_attach81,2808
void ieee80211_rate_detach(118,3587

net80211/wlan_xauth.mod.c,86
struct module __this_module7,124
__attribute_used__18,399
__attribute_used__26,644

net80211/ieee80211_scan_sta.c,2934
#define	EXPORT_SYMTAB34,1755
#define	STA_FAILS_MAX	63,2410
#define	STA_FAILS_AGE	64,2471
#define	STA_PURGE_SCANS	65,2542
#define RSSI_LPF_LEN	67,2608
#define	RSSI_EP_MULTIPLIER	68,2632
#define RSSI_IN(69,2701
#define LPF_RSSI(70,2748
#define RSSI_LPF(71,2812
#define	EP_RND(75,2937
#define	RSSI_GET(77,3022
struct sta_entry 79,3073
	struct ieee80211_scan_entry base;80,3092
	TAILQ_ENTRY(81,3127
#define	STA_HASHSIZE	93,3618
#define	STA_HASH(95,3695
struct sta_table 98,3790
	spinlock_t st_lock;99,3809
	TAILQ_HEAD(100,3852
#define	SCAN_STA_LOCK_INIT(110,4294
#define	SCAN_STA_LOCK_DESTROY(112,4372
#define	SCAN_STA_LOCK_IRQ(113,4407
#define	SCAN_STA_UNLOCK_IRQ(116,4537
#define	SCAN_STA_UNLOCK_IRQ_EARLY(119,4648
#define	SCAN_STA_GEN_LOCK_INIT(122,4751
#define	SCAN_STA_GEN_LOCK_DESTROY(124,4836
#define	SCAN_STA_GEN_LOCK(125,4875
#define	SCAN_STA_GEN_UNLOCK(126,4939
sta_detach(159,5757
sta_flush(177,6047
sta_flush_table(192,6293
saveie(204,6536
sta_add(217,6781
#define	ISPROBE(220,6937
#define	PICK1ST(221,7002
#undef PICK1ST316,9892
#undef ISPROBE317,9907
find11gchannel(321,9959
static const u_int chanflags[chanflags343,10514
add_channels(355,10999
static const u_int16_t rcl1[rcl1384,11800
static const u_int16_t rcl2[rcl2386,11937
static const u_int16_t rcl3[rcl3388,12035
static const u_int16_t rcl4[rcl4390,12131
static const u_int16_t rcl7[rcl7392,12238
static const u_int16_t rcl8[rcl8394,12408
static const u_int16_t rcl9[rcl9396,12528
static const u_int16_t rcl10[rcl10398,12591
static const u_int16_t rcl11[rcl11400,12744
static const u_int16_t rcl5[rcl5403,12892
static const u_int16_t rcl6[rcl6405,12977
static const u_int16_t rcl6x[rcl6x407,13056
static const u_int16_t rcl12[rcl12409,13146
static const u_int16_t rcl13[rcl13411,13219
struct scanlist 415,13345
	u_int16_t	mode;416,13363
	u_int16_t	count;417,13380
	const u_int16_t	*list;list418,13398
#define	IEEE80211_MODE_TURBO_STATIC_A	421,13426
#define	X(422,13483
static const struct scanlist staScanTable[staScanTable424,13540
#undef X446,14258
checktable(449,14279
sta_start(465,14585
sta_restart(583,18084
sta_cancel(595,18275
maxrate(604,18459
sta_compare(631,19145
check_rate(672,20378
#define	RV(674,20456
#undef RV720,21642
match_ssid(724,21666
match_bss(741,21978
sta_update_notseen(819,24503
sta_dec_fails(841,24999
select_bss(853,25222
sta_pick_bss(879,25877
sta_lookup(952,27955
sta_roam_check(967,28299
sta_age(1045,30656
sta_iterate(1082,31751
sta_assoc_fail(1120,32451
sta_assoc_success(1137,32861
static const struct ieee80211_scanner sta_default 1154,33245
adhoc_start(1175,33800
adhoc_pick_channel(1251,35997
adhoc_pick_bss(1284,36693
adhoc_age(1370,38967
adhoc_default_action(1391,39467
static const struct ieee80211_scanner adhoc_default 1404,39807
action_tasklet(1422,40306
init_scanner_sta(1490,42000
exit_scanner_sta(1500,42277

net80211/ieee80211_crypto_wep.c,586
static const struct ieee80211_cipher wep 59,2509
struct wep_ctx 77,3042
	struct ieee80211vap *wc_vap;wc_vap78,3059
	struct ieee80211com *wc_ic;wc_ic79,3124
	u_int32_t wc_iv;80,3175
wep_attach(84,3245
wep_detach(105,3690
wep_setkey(115,3832
wep_encap(128,4050
wep_enmic(201,5780
wep_decap(212,6022
wep_demic(247,6899
static const uint32_t crc32_table[crc32_table252,6997
wep_encrypt(308,10434
#define S_SWAP(310,10509
#undef S_SWAP402,12932
wep_decrypt(406,12960
#define S_SWAP(408,13035
#undef S_SWAP493,15223
init_crypto_wep(507,15451
exit_crypto_wep(515,15572

net80211/ieee80211_linux.c,1704
#define	EXPORT_SYMTAB30,1577
static ssize_t show_madwifi_name_type(72,2535
static struct attribute *ieee80211_sysfs_attrs[ieee80211_sysfs_attrs92,3029
static struct attribute_group ieee80211_attr_grp 101,3233
#define proc_net 108,3478
if_printf(115,3592
ieee80211_getmgtframe_debug(138,4243
ieee80211_vlan_register(183,5222
ieee80211_vlan_add_vid(194,5409
ieee80211_vlan_kill_vid(206,5639
ieee80211_vlan_vattach(216,5873
ieee80211_vlan_vdetach(230,6273
ieee80211_notify_node_join(235,6332
ieee80211_notify_node_leave(265,7193
ieee80211_notify_sta_stats(286,7803
ieee80211_notify_scan_done(306,8456
ieee80211_notify_replay_failure(320,8812
ieee80211_notify_michael_failure(346,9695
ieee80211_load_module(380,11017
static struct proc_dir_entry *proc_madwifi;proc_madwifi397,11426
static int proc_madwifi_count 398,11470
proc_read_nodes(401,11517
proc_ieee80211_read(430,12346
proc_ieee80211_open(450,12810
proc_ieee80211_write(482,13789
proc_ieee80211_close(506,14323
static struct file_operations proc_ieee80211_ops 518,14567
IEEE80211_SYSCTL_DECL(527,14784
IEEE80211_SYSCTL_DECL(554,15443
IEEE80211_SYSCTL_DECL(583,16143
IEEE80211_SYSCTL_DECL(606,16656
IEEE80211_SYSCTL_DECL(629,17163
IEEE80211_SYSCTL_DECL(652,17679
static const ctl_table ieee80211_sysctl_template[ieee80211_sysctl_template674,18184
ieee80211_virtfs_latevattach(718,19236
ieee80211_proc_cleanup(827,22695
ieee80211_proc_vcreate(840,22999
ieee80211_virtfs_vdetach(906,24561
ieee80211_rcv_dev_event(957,25949
static struct notifier_block ieee80211_event_block 975,26329
static char *version version983,26474
static char *dev_info dev_info984,26514
init_wlan(998,26838
exit_wlan(1007,27019

net80211/wlan_ccmp.mod.c,87
struct module __this_module7,124
__attribute_used__18,399
__attribute_used__44,1268

net80211/ieee80211_skb.c,2261
#define	EXPORT_SYMTAB31,1568
#undef alloc_skb68,2346
#undef dev_alloc_skb69,2363
#undef dev_kfree_skb70,2384
#undef dev_kfree_skb_any71,2405
#undef dev_kfree_skb_irq72,2430
#undef dev_queue_xmit73,2455
#undef kfree_skb74,2477
#undef kfree_skb_fast75,2494
#undef netif_rx76,2516
#undef pskb_copy77,2532
#undef skb_clone78,2549
#undef skb_copy79,2566
#undef skb_copy_expand80,2582
#undef skb_get81,2605
#undef skb_realloc_headroom82,2620
#undef skb_share_check83,2648
#undef skb_unshare84,2671
#undef vlan_hwaccel_receive_skb85,2690
atomic_t skb_total_counter 87,2723
atomic_t skb_refs_counter 91,2833
static void skb_print_message(99,3099
#define UNREF_USE_KFREE_SKB 178,5198
#define UNREF_USE_DEV_KFREE_SKB_ANY 179,5233
#define UNREF_USE_DEV_KFREE_SKB 180,5274
#define UNREF_USE_DEV_KFREE_SKB_IRQ 181,5309
static void skb_destructor(199,5902
static void get_skb_description(216,6517
static void print_skb_refchange_message(249,7450
static void print_skb_trackchange_message(264,7898
clean_clone_or_copy(281,8404
track_skb(288,8533
untrack_skb(328,9748
#define UNREF_USE_KFREE_SKB 367,10952
#define UNREF_USE_DEV_KFREE_SKB_ANY 368,10987
#define UNREF_USE_DEV_KFREE_SKB 369,11028
#define UNREF_USE_DEV_KFREE_SKB_IRQ 370,11063
unref_skb(375,11225
ref_skb(455,13499
void ieee80211_dev_kfree_skb_debug(489,14571
ieee80211_dev_kfree_skb_list_debug(530,15592
ieee80211_dev_alloc_skb_debug(558,16140
ieee80211_skb_track_debug(587,16713
ieee80211_skb_track(593,16883
ieee80211_skb_untrack_debug(601,17087
ieee80211_skb_untrack(607,17261
ieee80211_skb_counter(615,17467
ieee80211_skb_references(620,17545
int  vlan_hwaccel_receive_skb_debug(633,18026
int netif_rx_debug(641,18294
struct sk_buff * alloc_skb_debug(645,18438
struct sk_buff * dev_alloc_skb_debug(651,18653
struct sk_buff * skb_clone_debug(660,18856
struct sk_buff * skb_copy_debug(668,19092
struct sk_buff * skb_get_debug(676,19323
struct sk_buff * skb_realloc_headroom_debug(683,19489
struct sk_buff * pskb_copy_debug(694,19904
int dev_queue_xmit_debug(703,20132
struct sk_buff * skb_share_check_debug(709,20295
void  kfree_skb_fast_debug(727,20760
struct sk_buff *  skb_unshare_debug(734,20949
struct sk_buff * skb_copy_expand_debug(751,21402

net80211/ieee80211_input.c,3490
#define	EXPORT_SYMTAB35,1786
#define BUF_LEN 64,2448
doprint(72,2678
#define	IEEE80211_DISCARD(89,3170
#define	IEEE80211_DISCARD_IE(93,3350
#define	IEEE80211_DISCARD_MAC(97,3529
#define	IEEE80211_DISCARD(112,4200
#define	IEEE80211_DISCARD_IE(113,4259
#define	IEEE80211_DISCARD_MAC(114,4321
iwspy_event(147,5492
#define iwspy_event(181,6631
ieee80211_input(197,7251
#define	HAS_SEQ(200,7379
#undef HAS_SEQ869,27911
static int accept_data_frame(878,28109
#define IS_EAPOL(882,28268
#define PAIRWISE_SET(883,28343
#undef IS_EAPOL937,30050
#undef PAIRWISE_SET938,30066
ieee80211_input_all(946,30131
ieee80211_defrag(985,31180
ieee80211_deliver_data(1116,34942
ieee80211_decap(1230,38352
ieee80211_setup_rates(1297,40462
ieee80211_auth_open(1328,41331
ieee80211_send_error(1426,44093
alloc_challenge(1447,44486
ieee80211_auth_shared(1463,44915
#define IEEE80211_VERIFY_ELEMENT(1687,51601
#define	IEEE80211_VERIFY_LENGTH(1706,52232
ieee80211_ssid_mismatch(1719,52607
#define	IEEE80211_VERIFY_SSID(1728,52888
#define	IEEE80211_VERIFY_SSID(1742,53382
#define LE_READ_2(1753,53727
#define LE_READ_4(1757,53857
iswpaoui(1765,54094
iswmeoui(1771,54221
iswmeparam(1777,54348
iswmeinfo(1784,54514
isatherosoui(1791,54678
wpa_cipher(1802,54933
#define	WPA_SEL(1804,54979
#undef WPA_SEL1824,55500
wpa_keymgmt(1832,55617
#define	WPA_SEL(1834,55646
#undef WPA_SEL1846,55954
ieee80211_parse_wpa(1855,56130
rsn_cipher(1974,59250
#define	RSN_SEL(1976,59296
#undef RSN_SEL1998,59881
rsn_keymgmt(2006,59999
#define	RSN_SEL(2008,60028
#undef RSN_SEL2020,60340
ieee80211_parse_rsn(2029,60520
ieee80211_saveie(2145,63465
ieee80211_parse_wmeie(2160,63834
ieee80211_parse_wmeparams(2192,64601
#define	MS(2195,64724
#undef MS2227,65832
ieee80211_parse_athParams(2231,65857
forward_mgmt_to_app(2271,67121
ieee80211_saveath(2340,69023
struct count_nodes_arg 2359,69579
	const int k;2360,69604
	const int *subset;subset2361,69618
	int count;2362,69638
	struct ieee80211_node *new;new2363,69650
count_nodes(2368,69762
struct channel_combination_arg 2387,70152
	struct ieee80211com *ic;ic2388,70185
	struct ieee80211_node *new;new2389,70211
	int *best;best2390,70240
	int benefit;2391,70252
ints_sprintf(2397,70365
channel_combination(2411,70732
combinations(2465,72539
find_worse_nodes(2504,73153
ieee80211_parse_sc_ie(2597,75640
ieee80211_doth_findchan(2724,80025
ieee80211_doth_cancel_cs(2740,80443
ieee80211_doth_switch_channel(2754,80834
ieee80211_doth_switch_channel_tmr(2782,81577
ieee80211_parse_csaie(2789,81739
struct l2_update_frame 2945,86155
	u8 da[da2946,86180
	u8 sa[sa2947,86214
	__be16 len;2948,86247
	u8 dsap;2949,86268
	u8 ssap;2950,86302
	u8 control;2951,86349
	u8 xid_info[xid_info2952,86362
ieee80211_deliver_l2_rnr(2957,86421
ieee80211_deliver_l2_xid(2994,87376
contbgscan(3033,88689
startbgscan(3042,88908
ieee80211_recv_mgmt(3057,89246
#define	ISPROBE(3061,89391
#define	ISREASSOC(3062,89456
#undef ISREASSOC4152,122274
#undef ISPROBE4153,122291
#undef IEEE80211_VERIFY_LENGTH4155,122308
#undef IEEE80211_VERIFY_ELEMENT4156,122339
ieee80211_recv_pspoll(4162,122428
athff_decap(4232,124557
ath_eth_type_trans(4259,125344
ieee80211_check_mic(4283,125954
ieee80211_getbssid(4326,127057
ieee80211_note(4338,127426
ieee80211_note_frame(4355,127799
ieee80211_note_mac(4372,128244
ieee80211_discard_frame(4389,128685
ieee80211_discard_ie(4408,129214
ieee80211_discard_mac(4428,129749

ath/ath_pci.mod.c,88
struct module __this_module7,124
__attribute_used__18,399
__attribute_used__165,5924

ath/if_ath_pci.c,583
#define	EXPORT_SYMTAB42,2051
struct ath_pci_softc 76,2764
	struct ath_softc	aps_sc;77,2787
	u32	aps_pmstate[aps_pmstate79,2830
static char *version version87,2907
static char *dev_info dev_info88,2947
static struct pci_device_id ath_pci_id_table[] __devinitdata 97,3194
static u16 ath_devidmap[ath_devidmap120,4266
ath_pci_probe(125,4334
ath_pci_remove(272,8083
ath_pci_suspend(288,8457
ath_pci_resume(299,8746
static struct pci_driver ath_pci_driver 335,9590
ath_ioctl_ethtool(348,9918
init_ath_pci(377,10825
exit_ath_pci(391,11133
bus_read_cachesize(402,11355

ath/if_ath_radar.c,2959
#define	AR_DEBUG23,1036
#define	AR_DEBUG59,1877
#undef MAX75,2188
#define MAX(76,2199
#undef MIN78,2245
#define MIN(79,2256
#define sizetab(91,2440
#define nofloat_pct(92,2484
struct radar_pattern_specification 95,2558
	const char *name;name97,2663
	u_int32_t min_rep_int;100,2770
	u_int32_t max_rep_int;103,2882
	HAL_BOOL dyn_ints;106,3005
	u_int32_t fuzz_pct;109,3138
	u_int32_t min_pulse;111,3214
	u_int32_t min_evts;114,3322
	u_int32_t max_evts;117,3429
	u_int32_t max_consecutive_missing;119,3492
	u_int32_t max_missing;121,3558
	HAL_BOOL match_midpoint;123,3636
static struct radar_pattern_specification radar_patterns[radar_patterns126,3666
int ath_radar_is_enabled(159,5570
void ath_radar_get_params(174,6019
void ath_radar_set_params(198,6867
#define BUILD_PHY_RADAR_FIELD(200,6934
#undef BUILD_PHY_RADAR_FIELD220,7767
int ath_radar_update(225,7943
int ath_radar_correct_dfs_flags(302,10514
int ath_radar_is_dfs_required(320,11173
static struct ath_rp *pulse_head(pulse_head328,11507
static struct ath_rp *pulse_tail(pulse_tail334,11635
static struct ath_rp *pulse_prev(pulse_prev340,11763
#define CR_FALLTHROUGH	346,11888
#define CR_NULL	347,11914
#define CR_EXCESS_INTERVALS	348,11934
#define CR_INTERVALS 349,11964
#define CR_EXCESS_DURATION	350,11989
#define CR_DURATION	351,12018
#define CR_PULSES	352,12041
#define CR_MISSES	353,12062
#define CR_MIDPOINT_A	354,12083
#define CR_MIDPOINT_B	355,12108
#define CR_MIDPOINT_C	356,12133
#define CR_NOISE	357,12159
#define MR_MATCH 359,12181
#define MR_FAIL_MIN_INTERVALS	360,12202
#define MR_FAIL_REQD_MATCHES	361,12234
#define MR_FAIL_MAX_MISSES	362,12265
#define MR_FAIL_MIN_PERIOD	363,12294
#define MR_FAIL_MAX_PERIOD	364,12323
static const char* get_match_result_desc(366,12353
static int32_t match_radar(385,12738
static int32_t compare_radar_matches(420,13527
struct lp_burst 514,16777
	u_int32_t lpb_num_pulses;515,16795
	u_int32_t lpb_num_noise;516,16822
	u_int32_t lpb_tsf_delta;517,16848
	u_int64_t lpb_tsf_rel;518,16874
	u_int64_t lpb_min_possible_tsf;519,16898
	u_int64_t lpb_max_possible_tsf;520,16958
static const u_int32_t LP_MIN_BC 523,17022
static const u_int32_t LP_MAX_BC 524,17060
static const u_int32_t LP_NUM_BC 525,17099
static const u_int64_t LP_TSF_FUZZ_US 526,17173
static const u_int32_t LP_MIN_PRI 528,17277
static const u_int32_t LP_MAX_PRI 529,17319
static void rp_analyze_long_pulse_bscan(531,17362
static HAL_BOOL rp_analyze_long_pulse(617,19840
static HAL_BOOL rp_analyse_short_pulse(771,24432
static u_int32_t interval_to_frequency(1217,36851
static const char* get_longpulse_desc(1226,37146
static HAL_BOOL rp_analyse(1246,37821
static void ath_rp_clear(1511,45831
static void ath_rp_tasklet(1519,45983
void ath_rp_init(1528,46179
void ath_rp_done(1569,47108
void ath_rp_record(1577,47238
void ath_rp_print_mem(1642,49030
void ath_rp_print(1679,50152
void ath_rp_flush(1715,51267

ath/if_ath.c,20811
#define	AR_DEBUG45,2109
#define LE_READ_2(106,3411
#define LE_READ_4(109,3527
#define DEF_RATE_CTL 116,3783
#define DEF_RATE_CTL 118,3838
	ATH_LED_TX,122,3883
	ATH_LED_RX,123,3896
	ATH_LED_POLL,124,3909
#define ath_return_txbuf(286,11749
#define ath_return_txbuf_locked(295,12145
#define ath_return_txbuf_list(304,12569
#define ath_return_txbuf_list_locked(313,12983
#define cleanup_ath_buf(322,13425
#define AR5K_TUNE_RSSI_THRES 335,13981
#define AR5K_RSSI_THR	336,14025
#define AR5K_RSSI_THR_M	339,14083
#define AR5K_RSSI_THR_BMISS_5211	341,14195
#define	AR5K_RSSI_THR_BMISS_S	342,14286
#define AR5K_TUNE_BMISS_THRES 343,14319
#define	AR5K_PHY_BASE	345,14362
#define	AR5K_PHY(346,14393
#define AR5K_PHY_SHIFT_2GHZ	347,14446
#define AR5K_PHY_SHIFT_5GHZ	348,14486
#define EWA_PRINTK(353,14546
#define EWA_PRINTK(357,14683
#define ath_cac_running_dbgmsg(380,15552
#define ath_chan_unavail_dbgmsg(382,15632
static int ath_calinterval 409,16780
static int ath_countrycode 410,16832
static int ath_outdoor 411,16894
static int ath_xchanmode 412,16955
static int ath_maxvaps 413,17023
static char *autocreate autocreate414,17102
static char *ratectl ratectl415,17134
static int rfkill 416,17171
static int tpc 417,17194
static int countrycode 418,17214
static int maxvaps 419,17243
static int outdoor 420,17268
static int xchanmode 421,17293
static int beacon_cal 422,17320
static const char *hal_status_desc[hal_status_desc424,17348
static struct notifier_block ath_event_block 443,17887
static int	ath_debug 488,19369
static int	ieee80211_debug 500,19754
#define ATH_SETUP_XR_VAP(510,20049
#define ATH_SET_VAP_BSSID_MASK(531,20846
#define ATH_GET_VAP_ID(533,20949
#define ATH_SET_VAP_BSSID(534,21015
ath_attach(543,21190
ath_detach(1180,40112
ath_vap_create(1239,41646
ath_vap_delete(1499,49492
ath_suspend(1600,52382
ath_resume(1609,52535
ath_chan_unavail(1620,52792
_ath_cac_running_dbgmsg(1627,52984
_ath_chan_unavail_dbgmsg(1637,53239
ath_extend_tsf(1654,53785
#define TSTAMP_RX_MASK 1656,53835
ath_uapsd_processtriggers(1673,54157
#define	PA2DESC(1693,54677
#undef PA2DESC2164,69216
ath_intr(2172,69368
ath_fatal_tasklet(2369,76449
ath_rxorn_tasklet(2379,76653
ath_bmiss_tasklet(2389,76863
ath_chan2flags(2405,77350
ath_init(2432,77988
ath_stop_locked(2566,81567
static void ath_set_beacon_cal(2627,83176
ath_stop(2648,83705
ar_device(2680,84475
ath_set_ack_bitrate(2725,85354
#define AR5K_AR5212_STA_ID1 2730,85570
#define AR5K_AR5212_STA_ID1_ACKCTS_6MB 2731,85625
#define AR5K_AR5212_STA_ID1_BASE_RATE_11B 2732,85684
#undef AR5K_AR5212_STA_ID12741,86035
#undef AR5K_AR5212_STA_ID1_BASE_RATE_11B2742,86062
#undef AR5K_AR5212_STA_ID1_ACKCTS_6MB2743,86103
ath_reset(2757,86495
ath_desc_swap(2834,88658
ath_tx_txqaddbuf(2851,89039
dot11_to_ratecode(2916,91057
ath_tx_startraw(2927,91330
ath_ff_neverflushtestdone(3034,94455
ath_ff_ageflushtestdone(3040,94549
ath_ffstageq_flush(3053,94815
ath_get_buffers_available(3097,96003
ath_get_buffer_count(3106,96251
_take_txbuf_locked_debug(3115,96446
_take_txbuf_debug(3169,98141
#define ath_take_txbuf_locked(3187,98620
#define ath_take_txbuf_locked_debug(3189,98711
#define ath_take_txbuf_mgmt_locked(3192,98817
#define ath_take_txbuf_mgmt_locked_debug(3194,98913
#define ath_take_txbuf(3197,99024
#define ath_take_txbuf_debug(3199,99101
#define ath_take_txbuf_mgmt(3202,99193
#define ath_take_txbuf_mgmt_debug(3204,99275
#define ath_take_txbuf_locked(3209,99415
#define ath_take_txbuf_locked_debug(3211,99480
#define ath_take_txbuf_mgmt_locked(3214,99566
#define ath_take_txbuf_mgmt_locked_debug(3216,99636
#define ath_take_txbuf(3219,99727
#define ath_take_txbuf_debug(3221,99778
#define ath_take_txbuf_mgmt(3224,99850
#define ath_take_txbuf_mgmt_debug(3226,99906
ath_hardstart(3240,100237
ath_mgtstart(3571,109110
ath_keyprint(3618,110195
ath_keyset_tkip(3679,111568
#define	IEEE80211_KEY_XR	3682,111696
#undef IEEE80211_KEY_XR3731,113410
ath_keyset(3740,113620
key_alloc_2pair(3801,115566
key_alloc_pair(3852,116861
key_alloc_single(3896,117797
ath_key_alloc(3930,118781
ath_key_delete(3994,120810
ath_key_set(4070,122971
ath_key_update_begin(4086,123454
ath_key_update_end(4107,123990
ath_calcrxfilter(4137,125027
#define	RX_FILTER_PRESERVE	4139,125068
#undef RX_FILTER_PRESERVE4162,126012
ath_merge_mcast(4173,126298
ath_mode_init(4198,126969
ath_setslottime(4230,127740
ath_updateslot(4249,128231
ath_beacon_dturbo_config(4275,128852
#define	IS_CAPABLE(4277,128923
#undef IS_CAPABLE4318,130351
ath_beacon_dturbo_update(4326,130510
ath_check_beacon_done(4430,134036
ath_turbo_switch_mode(4467,134820
ath_beaconq_setup(4515,136178
ath_beaconq_config(4543,136798
#define	ATH_EXPONENT_TO_VALUE(4545,136841
#undef ATH_EXPONENT_TO_VALUE4582,137962
ath_beacon_alloc(4586,138005
ath_beacon_alloc_internal(4602,138350
ath_beacon_setup(4681,140889
#define	USE_SHPREAMBLE(4683,140950
#undef USE_SHPREAMBLE4778,143737
ath_beacon_generate(4785,143848
ath_beacon_send(4949,148553
ath_bstuck_tasklet(5125,154321
ath_beacon_return(5147,154880
ath_beacon_free(5157,155089
ath_beacon_config(5186,156230
#define	FUDGE	5230,157604
#undef FUDGE5292,159701
ath_descdma_setup(5434,163917
#define	DS2PHYS(5438,164043
#undef DS2PHYS5486,165287
ath_descdma_cleanup(5490,165317
ath_desc_alloc(5506,165734
ath_desc_free(5537,166480
ath_node_alloc_debug(5552,166923
ath_node_cleanup_debug(5587,167969
ath_node_free_debug(5645,169655
ath_node_getrssi(5664,170023
#define	HAL_EP_RND(5666,170075
#undef HAL_EP_RND5682,170626
ath_node_move_data(5693,170806
#define ath_alloc_skb(6057,179457
ath_alloc_skb_debug(6059,179552
ath_rxbuf_init(6081,180020
ath_skb_removepad(6185,183230
ath_capture(6215,184059
ath_recv_mgmt(6246,184965
ath_setdefantenna(6370,188736
ath_rx_tasklet(6383,189031
#define	PA2DESC(6385,189065
#undef PA2DESC6676,197732
ath_grppoll_period_update(6682,197784
ath_grppoll_txq_update(6744,199199
ath_grppoll_txq_setup(6769,199820
static void ath_grppoll_start(6819,201111
	struct rate_to_str_map 6840,201773
		u_int8_t str[str6841,201799
		int ratekbps;6842,201818
#define MAX_GRPPOLL_RATE 6856,202058
#define	USE_SHPREAMBLE(6857,202085
#undef USE_SHPREAMBLE7041,207818
static void ath_grppoll_stop(7044,207843
ath_txq_setup(7089,208829
ath_tx_setup(7203,212232
ath_txq_update(7225,212693
#define	ATH_EXPONENT_TO_VALUE(7227,212761
#define	ATH_TXOP_TO_US(7228,212805
#undef ATH_TXOP_TO_US7249,213534
#undef ATH_EXPONENT_TO_VALUE7250,213556
ath_wme_update(7257,213666
ath_uapsd_flush(7274,214167
ath_tx_cleanupq(7312,215274
ath_tx_cleanup(7332,215730
ath_get_icvlen(7344,215968
ath_get_ivlen(7356,216238
ath_tx_findindex(7375,216605
ath_tx_uapsdqueue(7393,216861
ath_tx_start(7463,219081
#define	MIN(7466,219208
#undef MIN8082,238037
ath_tx_processq(8090,238180
#define TSTAMP_TX_MASK 8258,243066
txqactive(8310,244392
ath_tx_tasklet_q0(8322,244672
ath_tx_tasklet_q0123(8343,245176
ath_tx_tasklet(8378,246094
ath_tx_timeout(8397,246548
ath_tx_draintxq(8418,247005
ath_tx_stopdma(8447,247683
ath_draintxq(8461,248032
ath_stoprecv(8489,248820
#define	PA2DESC(8491,248857
#undef PA2DESC8517,249844
ath_startrecv(8524,249925
ath_flushrecv(8566,251068
ath_chan_change(8577,251289
ath_chan_set(8611,252236
ath_mib_enable(8776,257703
ath_calibrate(8789,257971
ath_scan_start(8865,260169
ath_scan_end(8885,260655
ath_set_channel(8903,261119
ath_set_coverageclass(8920,261629
ath_mhz2ieee(8930,261810
ath_newstate(8942,262032
ath_dfs_cac_completed(9262,271932
ath_comp_set(9374,275337
ath_setup_comp(9382,275511
#define	IEEE80211_KEY_XR	9384,275567
#undef IEEE80211_KEY_XR9424,276741
ath_setup_stationkey(9437,277093
ath_setup_stationwepkey(9474,278190
ath_setup_keycacheslot(9566,281080
ath_newassoc(9597,282011
ath_getchannels(9629,282902
ath_led_done(9780,287784
ath_led_off(9792,288023
ath_led_blink(9806,288369
ath_led_event(9818,288709
set_node_txpower(9841,289260
ath_set_clamped_maxtxpower(9852,289659
ath_get_clamped_maxtxpower(9864,290106
ath_get_real_maxtxpower(9879,290702
ath_update_txpow(9895,291145
ath_xr_rate_setup(9930,292457
ath_setup_subrates(9959,293248
ath_rate_setup(10002,294523
ath_setcurmode(10049,295821
		u_int		rate;10053,295980
		u_int16_t	timeOn;10054,296020
		u_int16_t	timeOff;10055,296064
athff_approx_txtime(10116,297951
athff_can_aggregate(10151,299144
#define US_PER_4MS 10160,299476
#define	MIN(10161,299500
#undef US_PER_4MS10200,300601
#undef MIN10201,300619
ath_printrxbuf(10208,300669
ath_printtxbuf(10230,301538
ath_getstats(10259,302653
ath_set_mac_address(10282,303338
ath_change_mtu(10311,304046
ath_ioctl_diag(10343,304912
ath_ioctl(10398,306292
	ATH_SLOTTIME	10456,307896
	ATH_ACKTIMEOUT	10457,307916
	ATH_CTSTIMEOUT	10458,307938
	ATH_SOFTLED	10459,307960
	ATH_LEDPIN	10460,307979
	ATH_COUNTRYCODE	10461,307997
	ATH_REGDOMAIN	10462,308020
	ATH_DEBUG	10463,308041
	ATH_TXANTENNA	10464,308058
	ATH_RXANTENNA	10465,308079
	ATH_DIVERSITY	10466,308101
	ATH_TXINTRPERIOD	10467,308123
	ATH_FFTXQMIN	10468,308147
	ATH_XR_POLL_PERIOD	10469,308168
	ATH_XR_POLL_COUNT	10470,308194
	ATH_ACKRATE	10471,308219
	ATH_RP 10472,308239
	ATH_RP_PRINT 10473,308263
	ATH_RP_PRINT_ALL 10474,308287
	ATH_RP_PRINT_MEM 10475,308312
	ATH_RP_PRINT_MEM_ALL 10476,308337
	ATH_RP_FLUSH 10477,308366
	ATH_PANIC 10478,308390
	ATH_RP_IGNORED 10479,308421
	ATH_RADAR_IGNORED 10480,308445
	ATH_MAXVAPS 10481,308476
	ATH_NOCCA 10483,308515
ATH_SYSCTL_DECL(10488,308568
static int mincalibrate 10760,314517
static int maxint 10761,314567
static const ctl_table ath_sysctl_template[ath_sysctl_template10763,314618
ath_dynamic_sysctl_register(10936,318975
ath_dynamic_sysctl_unregister(11001,321095
ath_announce(11021,321546
#define	HAL_MODE_DUALBAND	11023,321585
#undef HAL_MODE_DUALBAND11079,323265
static ctl_table ath_static_sysctls[ath_static_sysctls11086,323423
static ctl_table ath_ath_table[ath_ath_table11135,324573
static ctl_table ath_root_table[ath_root_table11142,324718
static struct ctl_table_header *ath_sysctl_header;ath_sysctl_header11149,324859
ath_sysctl_register(11152,324916
ath_sysctl_unregister(11164,325139
ath_get_hal_status_desc(11172,325311
ath_get_txcont_adj_ratecode(11184,325625
static int disable_cca(11221,326642
#define AR5K_AR5212_PHY_NF	11231,326904
#define AR5K_AR5212_DIAG_SW	11232,326941
#define AR5K_AR5212_ADDAC_TEST	11233,326979
#define AR5K_AR5212_DIAG_SW	11234,327020
#define AR5K_AR5212_DIAG_SW_IGNOREPHYCS	11235,327058
#define AR5K_AR5212_DIAG_SW_IGNORENAV	11236,327111
#define AR5K_AR5212_RSSI_THR	11237,327162
#define AR5K_AR5212_DCU_GBL_IFS_SIFS	11238,327201
#define AR5K_AR5212_DCU_GBL_IFS_SIFS_M	11239,327247
#define AR5K_AR5212_DCU_GBL_IFS_EIFS	11240,327299
#define AR5K_AR5212_DCU_GBL_IFS_EIFS_M	11241,327345
#define AR5K_AR5212_DCU_GBL_IFS_SLOT	11242,327397
#define AR5K_AR5212_DCU_GBL_IFS_SLOT_M	11243,327443
#define AR5K_AR5212_DCU_GBL_IFS_MISC	11244,327495
#define	AR5K_AR5212_DCU_GBL_IFS_MISC_USEC_DUR	11245,327541
#define	AR5K_AR5212_DCU_GBL_IFS_MISC_DCU_ARB_DELAY	11246,327599
#define	AR5K_AR5212_DCU_GBL_IFS_MISC_SIFS_DUR_USEC	11247,327661
#define	AR5K_AR5212_DCU_GBL_IFS_MISC_LFSR_SLICE	11248,327723
#define	AR5K_AR5212_DCU_MISC_POST_FR_BKOFF_DIS	11249,327783
#define	AR5K_AR5212_DCU_CHAN_TIME_ENABLE	11250,327842
#define	AR5K_AR5212_DCU(11251,327895
#define	AR5K_AR5212_QCU(11252,327968
#define AR5K_AR5212_DCU_CHAN_TIME(11253,328036
#define AR5K_AR5212_DCU_MISC(11254,328104
#define	AR5K_AR5212_DCU_CHAN_TIME_DUR	11255,328167
#undef AR5K_AR5212_PHY_NF11329,330958
#undef AR5K_AR5212_DIAG_SW11330,330984
#undef AR5K_AR5212_ADDAC_TEST11331,331011
#undef AR5K_AR5212_DIAG_SW11332,331041
#undef AR5K_AR5212_DIAG_SW_IGNOREPHYCS11333,331068
#undef AR5K_AR5212_DIAG_SW_IGNORENAV11334,331107
#undef AR5K_AR5212_RSSI_THR11335,331144
#undef AR5K_AR5212_DCU_GBL_IFS_SIFS11336,331172
#undef AR5K_AR5212_DCU_GBL_IFS_SIFS_M11337,331208
#undef AR5K_AR5212_DCU_GBL_IFS_EIFS11338,331246
#undef AR5K_AR5212_DCU_GBL_IFS_EIFS_M11339,331282
#undef AR5K_AR5212_DCU_GBL_IFS_SLOT11340,331320
#undef AR5K_AR5212_DCU_GBL_IFS_SLOT_M11341,331356
#undef AR5K_AR5212_DCU_GBL_IFS_MISC11342,331394
#undef AR5K_AR5212_DCU_GBL_IFS_MISC_USEC_DUR11343,331430
#undef AR5K_AR5212_DCU_GBL_IFS_MISC_DCU_ARB_DELAY11344,331475
#undef AR5K_AR5212_DCU_GBL_IFS_MISC_SIFS_DUR_USEC11345,331525
#undef AR5K_AR5212_DCU_GBL_IFS_MISC_LFSR_SLICE11346,331575
#undef AR5K_AR5212_DCU_MISC_POST_FR_BKOFF_DIS11347,331622
#undef AR5K_AR5212_DCU_CHAN_TIME_ENABLE11348,331668
#undef AR5K_AR5212_DCU11349,331708
#undef AR5K_AR5212_QCU11350,331731
#undef AR5K_AR5212_DCU_CHAN_TIME11351,331754
#undef AR5K_AR5212_DCU_MISC11352,331787
#undef AR5K_AR5212_DCU_CHAN_TIME_DUR11353,331815
txcont_configure_radio(11361,331923
#define AR5K_AR5212_TXCFG	11510,337173
#define AR5K_AR5212_TXCFG_TXCONT_ENABLE	11511,337209
#define AR5K_AR5212_RSSI_THR	11512,337262
#define AR5K_AR5212_PHY_NF	11513,337301
#define AR5K_AR5212_ADDAC_TEST	11514,337338
#define AR5K_AR5212_DIAG_SW	11515,337379
#define AR5K_AR5212_DIAG_SW_IGNOREPHYCS	11516,337417
#define AR5K_AR5212_DIAG_SW_IGNORENAV	11517,337470
#define AR5K_AR5212_DCU_GBL_IFS_SIFS	11518,337521
#define AR5K_AR5212_DCU_GBL_IFS_SIFS_M	11519,337567
#define AR5K_AR5212_DCU_GBL_IFS_EIFS	11520,337619
#define AR5K_AR5212_DCU_GBL_IFS_EIFS_M	11521,337665
#define AR5K_AR5212_DCU_GBL_IFS_SLOT	11522,337717
#define AR5K_AR5212_DCU_GBL_IFS_SLOT_M	11523,337763
#define AR5K_AR5212_DCU_GBL_IFS_MISC	11524,337815
#define	AR5K_AR5212_DCU_GBL_IFS_MISC_LFSR_SLICE	11525,337861
#define	AR5K_AR5212_DCU_GBL_IFS_MISC_TURBO_MODE	11526,337921
#define	AR5K_AR5212_DCU_GBL_IFS_MISC_SIFS_DUR_USEC	11527,337981
#define	AR5K_AR5212_DCU_GBL_IFS_MISC_USEC_DUR	11528,338043
#define	AR5K_AR5212_DCU_GBL_IFS_MISC_DCU_ARB_DELAY	11529,338101
#define	AR5K_AR5212_DCU_MISC_POST_FR_BKOFF_DIS	11530,338163
#define	AR5K_AR5212_DCU_CHAN_TIME_DUR	11531,338222
#define	AR5K_AR5212_DCU_CHAN_TIME_ENABLE	11532,338273
#define	AR5K_AR5212_QCU(11533,338326
#define	AR5K_AR5212_DCU(11534,338394
#define AR5K_AR5212_DCU_MISC(11535,338467
#define AR5K_AR5212_DCU_CHAN_TIME(11536,338530
#undef AR5K_AR5212_TXCFG11594,341158
#undef AR5K_AR5212_TXCFG_TXCONT_ENABLE11595,341183
#undef AR5K_AR5212_RSSI_THR11596,341222
#undef AR5K_AR5212_PHY_NF11597,341250
#undef AR5K_AR5212_ADDAC_TEST11598,341276
#undef AR5K_AR5212_DIAG_SW11599,341306
#undef AR5K_AR5212_DIAG_SW_IGNOREPHYCS11600,341333
#undef AR5K_AR5212_DIAG_SW_IGNORENAV11601,341372
#undef AR5K_AR5212_DCU_GBL_IFS_SIFS11602,341409
#undef AR5K_AR5212_DCU_GBL_IFS_SIFS_M11603,341445
#undef AR5K_AR5212_DCU_GBL_IFS_EIFS11604,341483
#undef AR5K_AR5212_DCU_GBL_IFS_EIFS_M11605,341519
#undef AR5K_AR5212_DCU_GBL_IFS_SLOT11606,341557
#undef AR5K_AR5212_DCU_GBL_IFS_SLOT_M11607,341593
#undef AR5K_AR5212_DCU_GBL_IFS_MISC11608,341631
#undef AR5K_AR5212_DCU_GBL_IFS_MISC_LFSR_SLICE11609,341667
#undef AR5K_AR5212_DCU_GBL_IFS_MISC_TURBO_MODE11610,341714
#undef AR5K_AR5212_DCU_GBL_IFS_MISC_SIFS_DUR_USEC11611,341761
#undef AR5K_AR5212_DCU_GBL_IFS_MISC_USEC_DUR11612,341811
#undef AR5K_AR5212_DCU_GBL_IFS_MISC_DCU_ARB_DELAY11613,341856
#undef AR5K_AR5212_DCU_MISC_POST_FR_BKOFF_DIS11614,341906
#undef AR5K_AR5212_DCU_CHAN_TIME_DUR11615,341952
#undef AR5K_AR5212_DCU_CHAN_TIME_ENABLE11616,341989
#undef AR5K_AR5212_QCU11617,342029
#undef AR5K_AR5212_DCU11618,342052
#undef AR5K_AR5212_DCU_MISC11619,342075
#undef AR5K_AR5212_DCU_CHAN_TIME11620,342103
txcont_queue_packet(11635,342456
txcont_on(11768,346755
txcont_off(11789,347329
ath_get_dfs_testmode(11803,347628
ath_set_dfs_testmode(11830,348879
ath_get_txcont(11840,349183
ath_set_txcont(11850,349456
ath_set_txcont_power(11858,349679
ath_get_txcont_power(11876,350178
ath_set_txcont_rate(11886,350484
ath_get_txcont_rate(11903,350962
ath_set_dfs_cac_time(11913,351279
ath_get_dfs_cac_time(11923,351606
ath_set_dfs_excl_period(11943,352496
ath_get_dfs_excl_period(11952,352745
ath_test_radar(11964,353100
ath_dump_hal_map(11979,353629
ath_interrupt_dfs_cac(11991,354013
ath_radar_detected(12023,355188
ath_rcv_dev_event(12086,357095
ath_print_register_details(12111,357755
#define AR5K_AR5212_PHY_ERR_FIL	12115,357904
#define AR5K_AR5212_PHY_ERR_FIL_RADAR	12116,357948
#define AR5K_AR5212_PHY_ERR_FIL_OFDM	12117,357997
#define AR5K_AR5212_PHY_ERR_FIL_CCK 12118,358045
#define AR5K_AR5212_PIMR	12119,358096
#define AR5K_AR5212_PISR	12120,358133
#define AR5K_AR5212_PIMR_RXOK	12121,358170
#define AR5K_AR5212_PIMR_RXDESC	12122,358212
#define AR5K_AR5212_PIMR_RXERR	12123,358256
#define AR5K_AR5212_PIMR_RXNOFRM	12124,358299
#define AR5K_AR5212_PIMR_RXEOL	12125,358343
#define AR5K_AR5212_PIMR_RXORN	12126,358386
#define AR5K_AR5212_PIMR_TXOK	12127,358429
#define AR5K_AR5212_PIMR_TXDESC	12128,358471
#define AR5K_AR5212_PIMR_TXERR	12129,358515
#define AR5K_AR5212_PIMR_TXNOFRM	12130,358558
#define AR5K_AR5212_PIMR_TXEOL	12131,358602
#define AR5K_AR5212_PIMR_TXURN	12132,358645
#define AR5K_AR5212_PIMR_MIB	12133,358688
#define AR5K_AR5212_PIMR_SWI	12134,358729
#define AR5K_AR5212_PIMR_RXPHY	12135,358770
#define AR5K_AR5212_PIMR_RXKCM	12136,358813
#define AR5K_AR5212_PIMR_SWBA	12137,358856
#define AR5K_AR5212_PIMR_BRSSI	12138,358898
#define AR5K_AR5212_PIMR_BMISS	12139,358941
#define AR5K_AR5212_PIMR_HIUERR	12140,358984
#define AR5K_AR5212_PIMR_BNR	12141,359028
#define AR5K_AR5212_PIMR_RXCHIRP	12142,359069
#define AR5K_AR5212_PIMR_TIM	12143,359113
#define AR5K_AR5212_PIMR_BCNMISC	12144,359154
#define AR5K_AR5212_PIMR_GPIO	12145,359198
#define AR5K_AR5212_PIMR_QCBRORN	12146,359240
#define AR5K_AR5212_PIMR_QCBRURN	12147,359284
#define AR5K_AR5212_PIMR_QTRIG	12148,359328
#undef AR5K_AR5212_PHY_ERR_FIL12230,363929
#undef AR5K_AR5212_PHY_ERR_FIL_RADAR12231,363960
#undef AR5K_AR5212_PHY_ERR_FIL_OFDM12232,363997
#undef AR5K_AR5212_PHY_ERR_FIL_CCK12233,364033
#undef AR5K_AR5212_PIMR12234,364068
#undef AR5K_AR5212_PISR12235,364092
#undef AR5K_AR5212_PIMR_RXOK12236,364116
#undef AR5K_AR5212_PIMR_RXDESC12237,364145
#undef AR5K_AR5212_PIMR_RXERR12238,364176
#undef AR5K_AR5212_PIMR_RXNOFRM12239,364206
#undef AR5K_AR5212_PIMR_RXEOL12240,364238
#undef AR5K_AR5212_PIMR_RXORN12241,364268
#undef AR5K_AR5212_PIMR_TXOK12242,364298
#undef AR5K_AR5212_PIMR_TXDESC12243,364327
#undef AR5K_AR5212_PIMR_TXERR12244,364358
#undef AR5K_AR5212_PIMR_TXNOFRM12245,364388
#undef AR5K_AR5212_PIMR_TXEOL12246,364420
#undef AR5K_AR5212_PIMR_TXURN12247,364450
#undef AR5K_AR5212_PIMR_MIB12248,364480
#undef AR5K_AR5212_PIMR_SWI12249,364508
#undef AR5K_AR5212_PIMR_RXPHY12250,364536
#undef AR5K_AR5212_PIMR_RXKCM12251,364566
#undef AR5K_AR5212_PIMR_SWBA12252,364596
#undef AR5K_AR5212_PIMR_BRSSI12253,364625
#undef AR5K_AR5212_PIMR_BMISS12254,364655
#undef AR5K_AR5212_PIMR_HIUERR12255,364685
#undef AR5K_AR5212_PIMR_BNR12256,364716
#undef AR5K_AR5212_PIMR_RXCHIRP12257,364744
#undef AR5K_AR5212_PIMR_TIM12258,364776
#undef AR5K_AR5212_PIMR_BCNMISC12259,364804
#undef AR5K_AR5212_PIMR_GPIO12260,364836
#undef AR5K_AR5212_PIMR_QCBRORN12261,364865
#undef AR5K_AR5212_PIMR_QCBRURN12262,364897
#undef AR5K_AR5212_PIMR_QTRIG12263,364929
ath_print_register_delta(12274,365372
#define BIT_UNCHANGED_ON 12277,365497
#define BIT_UNCHANGED_OFF 12278,365527
#define BIT_CHANGED_ON 12279,365557
#define BIT_CHANGED_OFF 12280,365587
#define NYBBLE_SEPARATOR 12281,365617
#define BYTE_SEPARATOR 12282,365647
#define BIT_STATUS(12283,365677
#undef BIT_UNCHANGED_ON12356,367462
#undef BIT_UNCHANGED_OFF12357,367486
#undef BIT_CHANGED_ON12358,367511
#undef BIT_CHANGED_OFF12359,367533
#undef NYBBLE_SEPARATOR12360,367556
#undef BYTE_SEPARATOR12361,367580
#undef BIT_STATUS12362,367602
ath_lookup_register_name(12371,367928
#define keytable_entry_reg_count 12663,385692
#define keytable_entry_size 12664,385729
#undef keytable_entry_reg_count12682,386505
#undef keytable_entry_size12683,386537
ath_print_register(12711,387230
ath_regdump_filter(12724,387718
	#define UNFILTERED 12728,387866
	#define FILTERED 12729,387895
	#undef UNFILTERED12752,388874
	#undef FILTERED12753,388893
ath_ar5212_registers_dump(12760,389064
ath_ar5212_registers_dump_delta(12780,389724
ath_ar5212_registers_mark(12807,390617
ath_read_register(12822,391053
ath_write_register(12852,392085
ath_registers_dump(12880,392859
ath_registers_mark(12892,393226
ath_registers_dump_delta(12904,393550
ath_return_txbuf_locked_debug(12915,393840
ath_return_txbuf_debug(12961,395115
ath_return_txbuf_list_debug(12979,395574
ath_return_txbuf_list_locked_debug(13005,396210
cleanup_ath_buf_debug(13031,396888

ath/if_ath_ahb.c,625
#define	EXPORT_SYMTAB10,184
static char *version version44,846
static char *dev_info dev_info45,886
struct ath_ahb_softc 47,922
	struct ath_softc	aps_sc;48,945
	u32 aps_pmstate[aps_pmstate50,988
static struct ath_ahb_softc *sclist[sclist54,1021
static u_int8_t num_activesc 55,1076
bus_read_cachesize(60,1158
ahb_enable_wmac(69,1402
ahb_disable_wmac(133,3221
exit_ath_wmac(162,3869
init_ath_wmac(185,4358
static int ahb_wmac_probe(262,6281
static int ahb_wmac_remove(275,6552
static struct platform_driver ahb_wmac_driver 282,6702
ath_ioctl_ethtool(288,6843
init_ath_ahb(312,7535
exit_ath_ahb(323,7736

regression/wep/test_wep.c,911
static const u_int8_t test1_key[test1_key91,3904
static const u_int8_t test1_plaintext[test1_plaintext94,3995
static const u_int8_t test1_encrypted[test1_encrypted110,4778
#define	TEST(129,5601
static struct ciphertest 136,5869
	const char	*name;name137,5896
	int		cipher;138,5915
	int		keyix;139,5929
	u_int8_t		iv[iv140,5942
	const u_int8_t	*key;key141,5960
	size_t		key_len;142,5982
	const u_int8_t	*plaintext;plaintext143,6000
	size_t		plaintext_len;144,6028
	const u_int8_t	*encrypted;encrypted145,6052
	size_t		encrypted_len;146,6080
} weptests[weptests147,6104
dumpdata(152,6198
cmpfail(166,6451
struct wep_ctx_hw 179,6756
	struct ieee80211vap *wc_vap;wc_vap180,6809
	struct ieee80211com *wc_ic;wc_ic181,6874
	u_int32_t	wc_iv;182,6925
runtest(186,6991
static int tests 302,9921
static int debug 303,9944
init_crypto_wep_test(318,10306
exit_crypto_wep_test(346,10977

regression/ccmp/test_ccmp.c,2060
static const u_int8_t test1_key[test1_key95,3708
static const u_int8_t test1_plaintext[test1_plaintext99,3857
static const u_int8_t test1_encrypted[test1_encrypted107,4244
static const u_int8_t test2_key[test2_key154,5922
static const u_int8_t test2_plaintext[test2_plaintext158,6071
static const u_int8_t test2_encrypted[test2_encrypted165,6415
static const u_int8_t test3_key[test3_key212,8123
static const u_int8_t test3_plaintext[test3_plaintext216,8272
static const u_int8_t test3_encrypted[test3_encrypted223,8628
static const u_int8_t test4_key[test4_key270,10350
static const u_int8_t test4_plaintext[test4_plaintext274,10499
static const u_int8_t test4_encrypted[test4_encrypted281,10856
static const u_int8_t test5_key[test5_key329,12583
static const u_int8_t test5_plaintext[test5_plaintext333,12732
static const u_int8_t test5_encrypted[test5_encrypted340,13089
static const u_int8_t test6_key[test6_key388,14815
static const u_int8_t test6_plaintext[test6_plaintext392,14964
static const u_int8_t test6_encrypted[test6_encrypted399,15321
static const u_int8_t test7_key[test7_key445,16984
static const u_int8_t test7_plaintext[test7_plaintext449,17133
static const u_int8_t test7_encrypted[test7_encrypted456,17478
static const u_int8_t test8_key[test8_key503,19191
static const u_int8_t test8_plaintext[test8_plaintext507,19340
static const u_int8_t test8_encrypted[test8_encrypted514,19697
#define	TEST(524,20154
static struct ciphertest 531,20396
	const char	*name;name532,20423
	int		cipher;533,20442
	int		keyix;534,20456
	u_int64_t	pn;535,20469
	const u_int8_t	*key;key536,20484
	size_t		key_len;537,20506
	const u_int8_t	*plaintext;plaintext538,20524
	size_t		plaintext_len;539,20552
	const u_int8_t	*encrypted;encrypted540,20576
	size_t		encrypted_len;541,20604
} ccmptests[ccmptests542,20628
dumpdata(554,21132
cmpfail(568,21385
runtest(582,21701
static int tests 698,24674
static int debug 699,24697
init_crypto_ccmp_test(714,25059
exit_crypto_ccmp_test(743,25740

regression/tkip/test_tkip.c,1333
static const u_int8_t test1_key[test1_key58,2244
static const u_int8_t test1_phase1[test1_phase177,2899
static const u_int8_t test1_phase2[test1_phase280,3003
static const u_int8_t test1_plaintext[test1_plaintext86,3176
static const u_int8_t test1_encrypted[test1_encrypted99,3900
#define	TEST(111,4636
static struct ciphertest 120,4962
	const char	*name;name121,4989
	int		cipher;122,5008
	int		keyix;123,5022
	const u_int8_t	*key;key124,5035
	size_t		key_len;125,5057
	const u_int8_t	*plaintext;plaintext126,5075
	size_t		plaintext_len;127,5103
	const u_int8_t	*encrypted;encrypted128,5127
	size_t		encrypted_len;129,5155
	const u_int8_t	*phase1;phase1130,5179
	size_t		phase1_len;131,5204
	const u_int8_t	*phase2;phase2132,5225
	size_t		phase2_len;133,5250
} tkiptests[tkiptests134,5271
dumpdata(139,5344
cmpfail(153,5597
struct tkip_ctx 166,5902
	struct ieee80211vap *tc_vap;tc_vap167,5920
	struct ieee80211com *tc_ic;tc_ic168,5985
	u16	tx_ttak[tx_ttak170,6015
	int	tx_phase1_done;171,6032
	u8	tx_rc4key[tx_rc4key172,6053
	u16	rx_ttak[rx_ttak174,6114
	int	rx_phase1_done;175,6131
	u8	rx_rc4key[rx_rc4key176,6152
	uint64_t rx_rsc;177,6212
runtest(181,6276
static int tests 357,11012
static int debug 358,11035
init_crypto_tkip_test(373,11397
exit_crypto_tkip_test(402,12074

ath_hal/ath_hal.mod.c,87
struct module __this_module7,124
__attribute_used__18,399
__attribute_used__39,1040

ath_hal/ah_os.c,1738
#define	EXPORT_SYMTAB41,1991
#define USE_REAL_TIME_DELAY45,2072
static	int ath_hal_debug 68,2466
int	ath_hal_dma_beacon_response_time 71,2504
int	ath_hal_sw_beacon_response_time 72,2559
int	ath_hal_additional_swba_backoff 73,2614
_ath_hal_attach(76,2686
_ath_hal_detach(96,3087
ath_hal_vprintf(111,3290
ath_hal_printf(119,3464
ath_hal_ether_sprintf(132,3702
ath_hal_assert_failed(142,3948
static	struct alq *ath_hal_alq;ath_hal_alq167,4789
static	int ath_hal_alq_emitdev;168,4821
static	u_int ath_hal_alq_lost;169,4886
static	const char *ath_hal_logfile ath_hal_logfile170,4946
static	u_int ath_hal_alq_qsize 171,5003
ath_hal_setlogging(174,5056
#define	AH_SYSCTL_ARGS_DECL 201,5699
#define	AH_SYSCTL_ARGS	204,5807
#define	AH_SYSCTL_ARGS_DECL 206,5918
#define	AH_SYSCTL_ARGS	209,6039
sysctl_hw_ath_hal_log(213,6119
ath_hal_alq_get(231,6490
ath_hal_reg_write(257,7029
ath_hal_reg_read(282,7571
OS_MARK(307,8070
char *ath_hal_func ath_hal_func329,8612
ath_hal_reg_write(345,9168
ath_hal_reg_read(358,9535
HALDEBUG(375,9892
HALDEBUGn(387,10071
ath_hal_delay(402,10326
ath_hal_getuptime(408,10383
ath_hal_malloc(419,10573
ath_hal_free(430,10705
ath_hal_memzero(436,10757
ath_hal_memcpy(443,10867
ath_hal_memcmp(450,10998
static ctl_table ath_hal_sysctls[ath_hal_sysctls456,11114
static ctl_table ath_hal_table[ath_hal_table510,12505
static ctl_table ath_ath_table[ath_ath_table517,12648
static ctl_table ath_root_table[ath_root_table524,12788
static struct ctl_table_header *ath_hal_sysctl_header;ath_hal_sysctl_header531,12929
ath_hal_sysctl_register(534,12997
ath_hal_sysctl_unregister(546,13189
static char *dev_info dev_info556,13348
init_ath_hal(578,13981
exit_ath_hal(596,14316

ath_hal/uudecode.c,173
static void uudecode_usage(35,1185
static char *get_line_from_file(get_line_from_file40,1275
#define char_val(68,1732
static void read_stduu(70,1783
int main(119,2865
